(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    140530,       2656]
NotebookOptionsPosition[     92623,       1776]
NotebookOutlinePosition[    138906,       2629]
CellTagsIndexPosition[    138863,       2626]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.893578609773304*^9, 3.893578624342265*^9}, {
   3.893578693708591*^9, 3.8935787743401947`*^9}, {3.8935788202459784`*^9, 
   3.8935788501534023`*^9}, 3.893578888531579*^9, 3.8935789652216883`*^9, {
   3.893579043521942*^9, 3.893579087207818*^9}, {3.8936189192692757`*^9, 
   3.893618946170916*^9}, {3.893619475498517*^9, 3.8936194965503817`*^9}, {
   3.893619876909328*^9, 3.893619883130537*^9}, {3.8936200445414762`*^9, 
   3.893620053334133*^9}},
 FontSize->14,
 CellLabel->"In[28]:=",ExpressionUUID->"553d1835-998f-4fb8-ae6e-03b7a6b4d032"],

Cell[BoxData["\<\"/Users/richardbrower/Desktop/tmp_GitHUB_QuantumGeometry/\
mathematica\"\>"], "Output",
 CellChangeTimes->{
  3.8935811626955833`*^9, 3.8935823494593763`*^9, {3.893582575585792*^9, 
   3.893582600988976*^9}, 3.893582934595377*^9, 3.893583169484701*^9, 
   3.893583205788117*^9, 3.8935833662460623`*^9, 3.893583707607312*^9, 
   3.893583784543811*^9, 3.893583921042678*^9, {3.89358404434523*^9, 
   3.89358407292974*^9}, {3.8935841412148113`*^9, 3.893584156958288*^9}, 
   3.893584609600053*^9, 3.8935915775133057`*^9, 3.893591658548897*^9, 
   3.893592315184589*^9, 3.893592571444314*^9, 3.893592840842546*^9, 
   3.893592893951376*^9, 3.893592930476931*^9, 3.893593006133308*^9, 
   3.893593059337194*^9, 3.8935931297423983`*^9, 3.8935933332734623`*^9, {
   3.893593500771908*^9, 3.893593550257168*^9}, 3.893593716937533*^9, 
   3.893593865051303*^9, 3.893593969996935*^9, 3.89359405924498*^9, 
   3.89359410640623*^9, 3.893595973757824*^9, 3.893596114056884*^9, 
   3.893596191482217*^9, 3.893596465177724*^9, 3.8935965154155483`*^9, 
   3.8935966710881777`*^9, 3.893597503150529*^9, 3.8935978853946753`*^9, 
   3.893598119680373*^9, 3.89361918782442*^9, 3.8936197476593122`*^9, 
   3.893619887709914*^9, 3.893620057336842*^9, 3.893620193503718*^9, 
   3.893665638939237*^9, 3.893665674561595*^9, 3.893665814299992*^9, 
   3.893668111771103*^9, 3.893668238067972*^9, 3.8936688672079372`*^9, 
   3.893669036004121*^9, 3.894122776297471*^9, {3.894122893797188*^9, 
   3.894122916438766*^9}, 3.894122987245035*^9, 3.894123048197933*^9, 
   3.894123753911085*^9, 3.894123885523415*^9, {3.894123949189475*^9, 
   3.894123975454433*^9}, 3.894124101887343*^9, {3.894124494601651*^9, 
   3.894124522926754*^9}, 3.894125627471349*^9, {3.894125820796983*^9, 
   3.8941258400915527`*^9}, 3.894125888845489*^9, 3.894126285031698*^9, 
   3.8941263650623007`*^9},
 FontSize->14,
 CellLabel->"Out[28]=",ExpressionUUID->"009010f6-2a4b-44e6-828c-55303b2f4a18"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "AffineTable", "]"}]], "Input",
 CellChangeTimes->{{3.893582975082232*^9, 3.893583009936246*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"10b3ac31-bbfd-478d-ad35-4b27ac2936df"],

Cell[BoxData[
 RowBox[{"AffineTable", " ", ":=", " ", 
  RowBox[{
  "Import", "[", 
   "\"\<../data/16_0.155000_1.000_1.000_1.000_1.000_000004D2.dat\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.893579082197689*^9, {3.8935791605663443`*^9, 3.893579174315407*^9}, 
   3.893579273638742*^9, {3.893579948417747*^9, 3.893579968294731*^9}, 
   3.893580029307932*^9, {3.8935823152653627`*^9, 3.89358231959076*^9}, {
   3.893582402105201*^9, 3.893582427447699*^9}, {3.893582552476103*^9, 
   3.893582558442247*^9}, {3.893582904853272*^9, 3.8935829059407663`*^9}, {
   3.893583161756298*^9, 3.893583163466155*^9}, {3.893583585706094*^9, 
   3.893583590904819*^9}, {3.8935836804450493`*^9, 3.893583685509548*^9}, {
   3.893583776433188*^9, 3.893583779689261*^9}, {3.893583914595088*^9, 
   3.893583917403718*^9}, {3.893584022855818*^9, 3.89358402903023*^9}, {
   3.8935840648142757`*^9, 3.8935840684371443`*^9}, {3.894122522927431*^9, 
   3.894122525579488*^9}, {3.8941226597962008`*^9, 3.8941226644835253`*^9}, {
   3.894122731653738*^9, 3.894122735883645*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"d2f2cbc8-9113-49dc-99cd-956526c7f59c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", " ", "=", " ", 
  RowBox[{"AffineTable", " ", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.894122813580905*^9, 3.8941229388995867`*^9}, {
   3.894123029914592*^9, 3.8941230327058764`*^9}, {3.894123259057928*^9, 
   3.894123283071743*^9}, {3.894123458958083*^9, 3.8941234630939417`*^9}, {
   3.894123740966732*^9, 3.894123741270299*^9}, {3.894123845127207*^9, 
   3.8941238821175213`*^9}, {3.8941240137738943`*^9, 3.894124020677044*^9}, 
   3.894125399889163*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"190b20a9-9592-4307-85f0-83b87cf15239"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"-", "8"}], ",", 
             RowBox[{"-", "8"}], ",", "0.`"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"-", "7"}], ",", 
             RowBox[{"-", "8"}], ",", "0.`"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"-", "6"}], ",", 
             RowBox[{"-", "8"}], ",", "0.`"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"-", "5"}], ",", 
             RowBox[{"-", "8"}], ",", "0.`"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "8"}], ",", "0.`"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "8"}], ",", "0.`"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "8"}], ",", "0.`"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "8"}], ",", "0.`"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"0", ",", 
             RowBox[{"-", "8"}], ",", "0.`"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"1", ",", 
             RowBox[{"-", "8"}], ",", "0.`"}], "}"}], ",", 
         TemplateBox[{"2582"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{"0", ",", "8", ",", "0.00039125728163549975`"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{"1", ",", "8", ",", "0.00025689763289871495`"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{"2", ",", "8", ",", "0.00031769895600671215`"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{"3", ",", "8", ",", "0.00034442234380229863`"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{"4", ",", "8", ",", "0.0002454936941485234`"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"5", ",", "8", ",", "0.00028150598483780184`"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{"6", ",", "8", ",", "0.0003427476709957499`"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "8", ",", "0.000355441421839226`"}], "}"}], ",", 
         
         RowBox[{"{", 
           RowBox[{"8", ",", "8", ",", "0.00037783632767974493`"}], "}"}]}], 
       "}"}], Short[#, 8]& ], "line" -> 31, "sessionID" -> 
   34671201206173007859, "byteCount" -> 312816, "size" -> 8, "stored" -> 
   False, "expr" -> Missing["NotStored"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{
  3.89412540047196*^9, 3.894125627624329*^9, {3.8941258209125147`*^9, 
   3.8941258402134132`*^9}, 3.894125889156983*^9, 3.894126285149791*^9, 
   3.894126365201487*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"65c55c42-b06b-448e-8a61-f5ea6139031c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Corr", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"i", " ", "+", "  ", 
        RowBox[{"17", "*", 
         RowBox[{"(", 
          RowBox[{"j", "-", "1"}], ")"}]}]}], ",", "3"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "16"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "16"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.894122990057785*^9, 3.8941229906739063`*^9}, {
   3.894125170042309*^9, 3.894125204519787*^9}, 3.8941253110128736`*^9, {
   3.8941253464756413`*^9, 3.894125387593198*^9}, {3.8941254965149527`*^9, 
   3.8941255935512457`*^9}, {3.894125738242908*^9, 3.894125751375349*^9}, {
   3.894125807631481*^9, 3.8941258354451733`*^9}, {3.8941259130293922`*^9, 
   3.894125931952942*^9}, {3.894126106362709*^9, 3.89412611097698*^9}, {
   3.894126203175399*^9, 3.89412620690257*^9}, {3.894126352025002*^9, 
   3.894126359327498*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"65a9572d-5c58-45bb-9c97-3148279ebdf4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.0006479201086734692`", ",", "0.0006368617396937867`", ",", 
     "0.0006165737074014212`", ",", "0.0006252407128620897`", ",", 
     "0.00088884269631033`", ",", "0.0005648905086265264`", ",", 
     "0.0005606457524437501`", ",", "0.0007469406853676849`", ",", 
     "0.000708087223124714`", ",", "0.000881526417636755`", ",", 
     "0.0010040291467552497`", ",", "0.0007124888058809198`", ",", 
     "0.0008272036503349948`", ",", "0.0008540501484538801`", ",", 
     "0.0007698569744108452`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.000716440866691394`", ",", "0.0007007430991498594`", ",", 
     "0.0005928033304268479`", ",", "0.0003583214832900334`", ",", 
     "0.0006909994759677476`", ",", "0.00043910793362690256`", ",", 
     "0.001010126749634718`", ",", "0.0010203386926931376`", ",", 
     "0.0010716172137865629`", ",", "0.0013751999409943037`", ",", 
     "0.001235269283790146`", ",", "0.0011021870025377221`", ",", 
     "0.0008965461688335256`", ",", "0.000654651276921079`", ",", 
     "0.0006444518099196357`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.00039689395584616724`", ",", "0.0004746691724024618`", ",",
      "0.0007010875844248182`", ",", "0.0004975653009574595`", ",", 
     "0.0005584657081739067`", ",", "0.0008037800556272132`", ",", 
     "0.0010654571542048803`", ",", "0.0017714783645346457`", ",", 
     "0.001298514063953358`", ",", "0.0012684538275201246`", ",", 
     "0.002018153634021972`", ",", "0.0019479134324291553`", ",", 
     "0.001567275450956617`", ",", "0.0007935608257018644`", ",", 
     "0.0008072357724755715`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.0006753137942240785`", ",", "0.0006148429711816559`", ",", 
     "0.0007007992299603499`", ",", "0.0007245193463811733`", ",", 
     "0.0009586458132470618`", ",", "0.00102036092009286`", ",", 
     "0.0013531665264544983`", ",", "0.0020946543782227886`", ",", 
     "0.002075664843031116`", ",", "0.0033049311437542534`", ",", 
     "0.002510066258527842`", ",", "0.001602926148311245`", ",", 
     "0.0015466602112037084`", ",", "0.0012661466946762403`", ",", 
     "0.0009480522134358051`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.0006031288465514167`", ",", "0.0006055181873866236`", ",", 
     "0.0008887686476792919`", ",", "0.0010822610493952164`", ",", 
     "0.0008344753515078761`", ",", "0.0012158846558429548`", ",", 
     "0.0021773447794736977`", ",", "0.003883009484158917`", ",", 
     "0.004113394241186066`", ",", "0.0043111011858863865`", ",", 
     "0.0027318067552097145`", ",", "0.001986977349462914`", ",", 
     "0.0013099341094236323`", ",", "0.001177882225345391`", ",", 
     "0.0010116226053707765`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.0007014295160229925`", ",", "0.0008944543157917245`", ",", 
     "0.0008102180645194792`", ",", "0.0011901961750415309`", ",", 
     "0.0008615898941419091`", ",", "0.0018903462230013659`", ",", 
     "0.00417350917930617`", ",", "0.008686703861408691`", ",", 
     "0.00849072681255203`", ",", "0.008596661024039788`", ",", 
     "0.004018124696700804`", ",", "0.001865096178436492`", ",", 
     "0.0014609796197678363`", ",", "0.001087739770452851`", ",", 
     "0.0006135707411676251`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.000814741074975399`", ",", "0.0009001699437318219`", ",", 
     "0.0011953188490063224`", ",", "0.0018950383163692142`", ",", 
     "0.0027697638987824224`", ",", "0.0035552052452486912`", ",", 
     "0.009858847601069521`", ",", "0.03701268938882014`", ",", 
     "0.03924001901888777`", ",", "0.010511656290063572`", ",", 
     "0.002609485907400165`", ",", "0.002188171661641114`", ",", 
     "0.000897215857739989`", ",", "0.0009353773802219122`", ",", 
     "0.0007944410850991722`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.0005693085236887233`", ",", "0.000601220709691088`", ",", 
     "0.0011511652517643843`", ",", "0.0018354393157105822`", ",", 
     "0.0027356230166678385`", ",", "0.005743907661995723`", ",", 
     "0.03817724611181993`", ",", "1.`", ",", "0.03817724611181993`", ",", 
     "0.005743907661995723`", ",", "0.0027356230166678385`", ",", 
     "0.0018354393157105822`", ",", "0.0011511652517643843`", ",", 
     "0.000601220709691088`", ",", "0.0005693085236887233`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.0007944410850991722`", ",", "0.0009353773802219122`", ",", 
     "0.000897215857739989`", ",", "0.002188171661641114`", ",", 
     "0.002609485907400165`", ",", "0.010511656290063572`", ",", 
     "0.03924001901888777`", ",", "0.03701268938882014`", ",", 
     "0.009858847601069521`", ",", "0.0035552052452486912`", ",", 
     "0.0027697638987824224`", ",", "0.0018950383163692142`", ",", 
     "0.0011953188490063224`", ",", "0.0009001699437318219`", ",", 
     "0.000814741074975399`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.0006135707411676251`", ",", "0.001087739770452851`", ",", 
     "0.0014609796197678363`", ",", "0.001865096178436492`", ",", 
     "0.004018124696700804`", ",", "0.008596661024039788`", ",", 
     "0.00849072681255203`", ",", "0.008686703861408691`", ",", 
     "0.00417350917930617`", ",", "0.0018903462230013659`", ",", 
     "0.0008615898941419091`", ",", "0.0011901961750415309`", ",", 
     "0.0008102180645194792`", ",", "0.0008944543157917245`", ",", 
     "0.0007014295160229925`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.0010116226053707765`", ",", "0.001177882225345391`", ",", 
     "0.0013099341094236323`", ",", "0.001986977349462914`", ",", 
     "0.0027318067552097145`", ",", "0.0043111011858863865`", ",", 
     "0.004113394241186066`", ",", "0.003883009484158917`", ",", 
     "0.0021773447794736977`", ",", "0.0012158846558429548`", ",", 
     "0.0008344753515078761`", ",", "0.0010822610493952164`", ",", 
     "0.0008887686476792919`", ",", "0.0006055181873866236`", ",", 
     "0.0006031288465514167`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.0009480522134358051`", ",", "0.0012661466946762403`", ",", 
     "0.0015466602112037084`", ",", "0.001602926148311245`", ",", 
     "0.002510066258527842`", ",", "0.0033049311437542534`", ",", 
     "0.002075664843031116`", ",", "0.0020946543782227886`", ",", 
     "0.0013531665264544983`", ",", "0.00102036092009286`", ",", 
     "0.0009586458132470618`", ",", "0.0007245193463811733`", ",", 
     "0.0007007992299603499`", ",", "0.0006148429711816559`", ",", 
     "0.0006753137942240785`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.0008072357724755715`", ",", "0.0007935608257018644`", ",", 
     "0.001567275450956617`", ",", "0.0019479134324291553`", ",", 
     "0.002018153634021972`", ",", "0.0012684538275201246`", ",", 
     "0.001298514063953358`", ",", "0.0017714783645346457`", ",", 
     "0.0010654571542048803`", ",", "0.0008037800556272132`", ",", 
     "0.0005584657081739067`", ",", "0.0004975653009574595`", ",", 
     "0.0007010875844248182`", ",", "0.0004746691724024618`", ",", 
     "0.00039689395584616724`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.0006444518099196357`", ",", "0.000654651276921079`", ",", 
     "0.0008965461688335256`", ",", "0.0011021870025377221`", ",", 
     "0.001235269283790146`", ",", "0.0013751999409943037`", ",", 
     "0.0010716172137865629`", ",", "0.0010203386926931376`", ",", 
     "0.001010126749634718`", ",", "0.00043910793362690256`", ",", 
     "0.0006909994759677476`", ",", "0.0003583214832900334`", ",", 
     "0.0005928033304268479`", ",", "0.0007007430991498594`", ",", 
     "0.000716440866691394`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.0007698569744108452`", ",", "0.0008540501484538801`", ",", 
     "0.0008272036503349948`", ",", "0.0007124888058809198`", ",", 
     "0.0010040291467552497`", ",", "0.000881526417636755`", ",", 
     "0.000708087223124714`", ",", "0.0007469406853676849`", ",", 
     "0.0005606457524437501`", ",", "0.0005648905086265264`", ",", 
     "0.00088884269631033`", ",", "0.0006252407128620897`", ",", 
     "0.0006165737074014212`", ",", "0.0006368617396937867`", ",", 
     "0.0006479201086734692`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.894124102222891*^9, {3.894124494788862*^9, 3.894124523070899*^9}, {
   3.894125377522388*^9, 3.894125388242*^9}, 3.894125594465509*^9, 
   3.894125627711431*^9, {3.8941257448122272`*^9, 3.8941257536308804`*^9}, {
   3.8941258209781847`*^9, 3.8941258403114243`*^9}, 3.894125889270006*^9, 
   3.8941259348609467`*^9, 3.894126208020094*^9, 3.8941262852481833`*^9, 
   3.8941263652913733`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"c405eb7d-0a50-4e25-bfc1-c6748628ad68"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", "%9", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[33]:=",ExpressionUUID->"3c02b818-1c6b-406e-8a8d-f05e6ac0da14"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJztmHk0lWvfxztISoMxNChTJOWoVEfq68hpMFUi0klJCpklkjo45SBDGZJy
kEpIFCUcUdIhGdrmebbH+76V6mmUZ7/rfZ/3j/dd1x/99fzz7LX2uvYf97r2
dV+/6fv9qBz2snIWnTZtmvT/fP/r939/XuP/rhoXlxq2BzNQy3TysZRl8OPh
nWveGwjQIfHnb0ZpDPSOyTbGX2KQX6Nw2+l3CpvUXPZPMjTcvNvdLL4I4LTF
fORZ7Rh8dXu/lQifmxh/fcrgMIOum3MzN0lQKGprTz41TEPcOWe9aL0A4pe3
p1VZjCFI8VGneT+NrwvfFBqWCyA3zUO+TH0M809ort8nxeAbL9Ru/ykKbins
JzelOLj6Ub565Wzhvi5RZSmuFLRjnn3I5rCJz5P2J52HdH7S+5Luh3SfkqlD
U8vcGYTpzL5g3Epj6KUY8+Ey///F419rK/+gyts2GqaXnrHyUwUI/z22Oat5
FNdqvP/ckEfjwBon22lTfJTYKquGbRiBR8P10PgHNPh3JYdjlQWY9421ODlq
BF4hQXlab2lIK9lGzJWksL9uh0PFmzFITgU1KgfRqNP8zM3/mY+zTnscZM2H
sOTQcGb/DRqWn9cH+gzwUdxzxdSdPYwL6noO1h9onGWLy7IWUPjipRlXvoCN
ednJR1S6abwPnZQ6nSdAUDL1c8WXUdxi9bb47mfg9WLjpFoSjc0jO9XqJnjo
ETzS3GbLIDYk+Q/H8zQibugur3/Bw5v7xif+uEbjMe+gNl3Jh1h3z7hP4jB2
6fBm/KXH4FDOy9rfPlA4Ozt+xRM7LlrvKO3m6DNYLDoQZzKDxrFhk5XVoVwY
SbJsYlcyGHyx07+UQ8Eoo0a1RJeLQkt2tKQKg8772977llDCczqcefKAg6na
Q8dWn2egYL8teWw1g+ehjZeWxgiIcdllErh4vQYDc+kyEf1aCqaFp1we93HQ
xzsRMbCIwZK2z3oF2RTkTzosqbzAwYp3w+t/TBC+p098tksGH9EVH+cEGA+j
iS/uHWNN4wuVa1daxMPdNSrZtx8OoMss/FTgRhp7B1tXTljzYNunHHS1tg/p
cioSFYtphMUFd+u1ciFuYvFifnUPkuQ7aRlHGvJXJ2VmjfAw321Qlm0ziHdF
cmbXPGgoxm7NdpbhY5OCyEU51iBigiIHJ/yF+Xy4MEigx4eIWmCfjNoQDgmO
XjsQyQCuYtuyjBmkx5iOKxULcJdqszonx2BYeUvewkgKWVlLdf/8iYMUkzca
8leFdaIvd5EVysB5RlKHiz2F26XZi2lLBhaGHR7NzjREYnaUPgzgoZh1reQH
CQZaE9m9bfsocKUyrG9XsJGSuec9i0/j5sq3kxcEAniPsVJq08dQLu21LDeQ
wbIAjnuUqPD/VapWvJUmx2Xts4nw+U9p6BjcmdNtIUD0Fmne1emjyNj+Y1U1
i4a9QbfWcLQAziJmu2JzRqFv1t2XNJfGgtR7x3iXuOjkW5Q5VXZDzGrSZYuA
wpTR3FSfDxz0KpZ+6DzYCftnn35ZPUTh/pmCgOMvOdB48k26sLADr0bl87v1
aKSo/hmpocPDFT/fFlHlPvg1Jbxr1qGxtEpMa9l8Huba/T1ytqYXqxOWHfEU
o/HDrZr4UGcuNt1nXS2X6ka+yw/9m4X3tfFjVmSDsE7coiNy2WcHsWevjILx
c+H+Dh5KqQcECFOqbUpeNQqDr/nr0g4yMLVsPDB2k0ZU0VPz5wv5SF4yfcrK
mwH/nYWB+CiNedHDCp+E9XR/VXzonSkavlaO62wMKDx56nC62J0NTfuyUBFh
/AyOc7Rl1RjIOJZLf3ISQK3vr+LRJAZH33MWTvowSPsrcJ6hHoU1RW22UTEM
EswvPXW3EsY9qPCA6gA5LvYT2o+Dw2i4XykrMXfkY2E5X3pX2hDku7r+7ltH
o3LrqnwpYx4Mg4OW/3SiD1HZ2mKpssJ6+SDFHrrNxQp/0YQG+R6UTt3Xj5lJ
Y1Gy38TYaS78X3c9bXTphplLSEFzDQV2f7Gv/68cxK359cov39oAhWOJRvkU
5sx4GppJsSHX2LX2xNZWtO9J/6jRS+HeP05K2z3kwMTq/NH+/R0oU3+osLSD
gpZtYtWhdA5a5E+vPzW9A/V3v7hVq9IYyEx1XMHnwsbcoujcgl4cezCy1ttV
2D9NTFxvifBhvabCdlH2ICIPxunuOksjfZvyePhuPgKVKr12+A/hfPTMp7fY
NPyzu87X9Aiw2/GC8/OTY5iXsu56uzC/n/1DKUXeVDgvi8KlCpLYsJH/cEPG
gEGe2bIH0xVo9O8eLq3I5cLg3tak+4oMvp7VUxm9QiHPL68q9zAHMrHKaR4v
aDxXHxVx8BCgfJbZgUTbUWJc1NxEL9f40NCSeO2vrcrHjYL2TMXPg5jbofBc
x5xGgGHfaulEHuo6yk5/lBrADKOXexs1aVxdbuCwdhoPnwtS3XR9elG/b6mu
AZtCzMOMnONDHES5LdE3mNmJvXXqO7IfU5i82d4y7UcOMp+8XeG+sw103P3w
iDgKnnlDouZH2dBQl5Ocv64Zaq4KgvwUCqqzFi4qiGdj2TV+RO5oMxZLnazq
vkFBwu+RhHalMF8P7nuSmtACNckzyfOaKawcapsyiOQgvcrI+kB+O8rfWyEL
NC56qSaUH+EhP8/9UeWCflju/OZ69B6N7CL99rq5Anyd1BBNchxBcKOfA/tX
GqXnbhibtPAQxl1xaEBnEJlNptGF6TQyPfd6323iY2TbOgO3x8PoDOUruQn7
42zD8/MuCPO3yK6A9ddXLmo9V5xL2sogqm5ltPlWGo7SuiaPNHiojbZXclrO
YOmOglsfhfllVLXPt0KcS4yLp3I0e9NmBhr72Vf/XkbjcIB/VkkLF0l5weFl
djRGXVw0Q5/xUBlo82hAdBCSPhJidxVpqEvM6JhZwUXy85qZE+49sIpZuX/f
Zwq/cfUPu/3EBROvnm3l1IVdi8zPPU2jYM3XkuzPZuNbgl0If2MLnFJlnj08
Q+Fd+MtT9opsfA2z2RwuykLORKRaXRiFZr8q3Uur2MjUM6kftWehmvdV4mYg
heK1Qfa6ImwEX04xscl7BeXbl1dlJlJ4rfeqKSWYjfGNOc5NMc3YcEfEy+o9
BbvgK2GealwsNLE91zO7Cwre24NnZwvzcCpR03Ccj6y3wzm/zRvB1zVHPk9t
o5Gv7hxmeo6HA7bu4eyKfpjp3ZghKKfR2OT9s+JmARJqU26n9Y5gzD4heX8y
DW/znZPL7wn7jHqmou/xYSQViB8K+ULDZmlgfaI2hb0Hf295vIWNvzMa0huc
hHEsTn37UKibjK+1i3FNyHrMujw8JqWBxuU7RSdVzgjQ8zKCSgwZxR2/gsSc
cGHdbc5IkfXhI1YpMmpfzRCUKotmTY+jMVJwVyb7Ih+pvxS/PaM0DOtKcVnJ
BgohM2tu7vDjYJVrWuw8u3acUlN1rqyi8IcmN3jLVg52mZWVfspqw86uXDNP
DwrVY97py1ljwjo5qCPZ0YRMi5vXC8wo9Mp75SRvGkOi6y3NDZYvMTeUE6Bl
S+H3NidWldcY4uX07/Z01sNnd2Bfny+FwbpglXHuGOza1+eI7XiF7SXGqnI5
FOxXiUSJtLOhLlWZE0C34JykUURqkTBPzJcbyIhxUN3wse96ZiumL/d6bfma
QqZmfUboHC4Sr2vZphd34peP0rqtW2jk+ry5/McJHgIcLFZy3fsRdfVIdFcU
Dc/NhqbsED5m6yiUh74egmdG6u7KEhoP4vyzbFYJYNixzzyjaATTUq06vhxj
YLkxUzysWthvin76YcqDHJfpo8f9F+5hQOkVfU4T6prk3KSJhgwecq7b9D0x
Fc4vxy21c/bSOLG7ZG6hJQ/Wx7bH7d9FI8t1sffADR6cZYoe6TkNoNI3QNRx
ikJLWUig604uxlNveLWXduHV9XfjN4V6cdmMC0lyCzgIGeoMXf2pFbY+bSOX
hXqIFXv9oYU5Gxs86151NbEQI2Ny0Wk3hfmy1Usj9o6hsGT8i7NM/f+edyhI
Ln/bUDf+5chIz5P2J52HdH7S+5Luh3Sfet5mZ86eYHB5VppIrdBPsAe1d77n
kuNCii8pH0j5Q8o3Un6S8pmU/6R6IdUXqR5J9Uuqd1J/IPUTUv/53noh9UNS
/yT1W1J/JvVzUv8nzQvSfCHNI9L8Is070nwkzVPS/CXN6++dLyT9QNIbJH1C
0jMk/UPSSyR9RdRjBP1G0nskfUjSkyT9SdKrJH37vXqMpLdJ+pyk50n6n+QX
SP6C5EdI/oXkd0j+iOSnSP6L5NdI/o7kB7/bvxD8KcnPkvwvyS+T/DXJj5P8
O8nvk/gAiSeQ+AOJV5D4BomHkPjJ9/p9Es8h8R8SLyLxJRKPIvErEu8i8TES
TyPxNxKvI/E9Eg8k8UMSb/xePkbinyReSuKrJB5L4rck3kviwySeTOLPJF5N
4tskHk7i5yTeTuLz38uT/7P+e9d/AsuFyGE=
   "], {{0, 0}, {17, 17}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{16.5, 
       FormBox["1", TraditionalForm]}, {12.5, 
       FormBox["5", TraditionalForm]}, {7.5, 
       FormBox["10", TraditionalForm]}, {0.5, 
       FormBox["17", TraditionalForm]}}, {{16.5, 
       FormBox["1", TraditionalForm]}, {12.5, 
       FormBox["5", TraditionalForm]}, {7.5, 
       FormBox["10", TraditionalForm]}, {0.5, 
       FormBox["17", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}, {16.5, 
       FormBox["17", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}, {16.5, 
       FormBox["17", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.894126070353571*^9, 3.894126285307104*^9, 
  3.8941263653444967`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"6647c38f-0a75-4d77-94d4-6315f748a14e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CorrFT", " ", "=", " ", 
  RowBox[{"Fourier", "[", "Corr", "]"}]}]], "Input",
 CellChangeTimes->{{3.8941261270958157`*^9, 3.8941261412305927`*^9}, 
   3.894126184201715*^9, {3.8941262435250387`*^9, 3.8941262467884073`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"004795d7-ea2f-4df9-9ec1-3241fde93134"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.10002346563235032`", ",", 
     RowBox[{"-", "0.08496940379072994`"}], ",", "0.07441907757381881`", ",", 
     
     RowBox[{"-", "0.070165730902262`"}], ",", "0.06464365695489416`", ",", 
     RowBox[{"-", "0.06275418848696024`"}], ",", "0.05948129057030597`", ",", 
     
     RowBox[{"-", "0.059718584247650815`"}], ",", "0.05810429902481781`", ",", 
     RowBox[{"-", "0.059718584247650815`"}], ",", "0.05948129057030597`", ",", 
     RowBox[{"-", "0.06275418848696024`"}], ",", "0.06464365695489416`", ",", 
     
     RowBox[{"-", "0.070165730902262`"}], ",", "0.07441907757381881`", ",", 
     RowBox[{"-", "0.08496940379072994`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.08435178077308517`"}], ",", "0.08417053539189027`", ",", 
     
     RowBox[{"-", "0.07729928388629975`"}], ",", "0.07147756409734266`", ",", 
     
     RowBox[{"-", "0.06633076299528404`"}], ",", "0.06256290468584912`", ",", 
     
     RowBox[{"-", "0.05986665274542573`"}], ",", "0.05890447775853525`", ",", 
     
     RowBox[{"-", "0.0586209067454266`"}], ",", "0.05866110162701824`", ",", 
     RowBox[{"-", "0.05922102458055939`"}], ",", "0.06101538816075152`", ",", 
     
     RowBox[{"-", "0.06343279310050687`"}], ",", "0.0665740366737094`", ",", 
     RowBox[{"-", "0.07061096490598454`"}], ",", "0.0763681613374756`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07345324603855852`", ",", 
     RowBox[{"-", "0.07600071065550561`"}], ",", "0.07498772475826881`", ",", 
     
     RowBox[{"-", "0.07130936820189894`"}], ",", "0.06716428042505898`", ",", 
     
     RowBox[{"-", "0.06318927080358708`"}], ",", "0.060483786092903495`", ",", 
     RowBox[{"-", "0.0586259445408565`"}], ",", "0.05804126820390932`", ",", 
     RowBox[{"-", "0.05773576968802813`"}], ",", "0.05831248843334872`", ",", 
     
     RowBox[{"-", "0.05971788296240124`"}], ",", "0.06136560154218382`", ",", 
     
     RowBox[{"-", "0.06322320224014293`"}], ",", "0.06679871390615108`", ",", 
     
     RowBox[{"-", "0.07080496030796234`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.06954946988211734`"}], ",", "0.07052507781221011`", ",", 
     
     RowBox[{"-", "0.07081249367225287`"}], ",", "0.06937603115388395`", ",", 
     
     RowBox[{"-", "0.06694646886448888`"}], ",", "0.06361086344701271`", ",", 
     
     RowBox[{"-", "0.06080657766279194`"}], ",", "0.058822866226222785`", ",", 
     RowBox[{"-", "0.05763849780548365`"}], ",", "0.05763169274134685`", ",", 
     
     RowBox[{"-", "0.0578015348811157`"}], ",", "0.0584857847855413`", ",", 
     RowBox[{"-", "0.059709908415645635`"}], ",", "0.06127314420689041`", ",", 
     RowBox[{"-", "0.06324161082569835`"}], ",", "0.06678110163648625`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0642950638354285`", ",", 
     RowBox[{"-", "0.06620337963630978`"}], ",", "0.06695313984645554`", ",", 
     
     RowBox[{"-", "0.066428079553159`"}], ",", "0.06543033910763121`", ",", 
     RowBox[{"-", "0.06331286297662791`"}], ",", "0.06100880403574514`", ",", 
     
     RowBox[{"-", "0.0590911847352653`"}], ",", "0.057941736742729524`", ",", 
     
     RowBox[{"-", "0.05746979543492074`"}], ",", "0.05734317355044627`", ",", 
     
     RowBox[{"-", "0.057356087119814936`"}], ",", "0.058350208211819854`", 
     ",", 
     RowBox[{"-", "0.05958352640603058`"}], ",", "0.06106514649386491`", ",", 
     
     RowBox[{"-", "0.06294269596199271`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.06234997953800851`"}], ",", "0.06283947697517629`", ",", 
     
     RowBox[{"-", "0.06391541049556969`"}], ",", "0.06453885441105667`", ",", 
     
     RowBox[{"-", "0.06378866978118214`"}], ",", "0.062437854312354865`", ",", 
     RowBox[{"-", "0.06056434902551068`"}], ",", "0.05905040740369524`", ",", 
     
     RowBox[{"-", "0.05799015654402241`"}], ",", "0.05768100737451444`", ",", 
     
     RowBox[{"-", "0.05713872842132897`"}], ",", "0.05721292308111316`", ",", 
     
     RowBox[{"-", "0.05731366719956848`"}], ",", "0.058030126817924785`", ",", 
     RowBox[{"-", "0.0595905993895125`"}], ",", "0.06086091001886796`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.058901043986099855`", ",", 
     RowBox[{"-", "0.060318176499198`"}], ",", "0.061542120583122126`", ",", 
     RowBox[{"-", "0.062341725666002934`"}], ",", "0.06245143400569887`", ",", 
     RowBox[{"-", "0.06132351459820617`"}], ",", "0.06023422991296978`", ",", 
     
     RowBox[{"-", "0.05886951689694664`"}], ",", "0.05838053481382086`", ",", 
     
     RowBox[{"-", "0.058067382748044474`"}], ",", "0.05760863255981227`", ",", 
     RowBox[{"-", "0.05708525385387015`"}], ",", "0.05765593042746511`", ",", 
     
     RowBox[{"-", "0.057807081279062256`"}], ",", "0.058429655554182766`", 
     ",", 
     RowBox[{"-", "0.059390930301841`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.05915572510245809`"}], ",", "0.05896481849077926`", ",", 
     
     RowBox[{"-", "0.059167910641238795`"}], ",", "0.06006580994619053`", ",", 
     RowBox[{"-", "0.060180126090783936`"}], ",", "0.060476312936368876`", 
     ",", 
     RowBox[{"-", "0.05999932725573673`"}], ",", "0.05915682607670335`", ",", 
     
     RowBox[{"-", "0.05852405129679559`"}], ",", "0.058376500075910914`", ",", 
     RowBox[{"-", "0.058116788923081794`"}], ",", "0.05763345323223901`", ",", 
     RowBox[{"-", "0.057787914496563814`"}], ",", "0.05795609041678263`", ",", 
     RowBox[{"-", "0.05817586405647141`"}], ",", "0.05847789668815553`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05749173723881414`", ",", 
     RowBox[{"-", "0.05835772119750192`"}], ",", "0.05861855915716384`", ",", 
     
     RowBox[{"-", "0.058432943475222404`"}], ",", "0.05842886026927178`", ",", 
     RowBox[{"-", "0.05869642383976281`"}], ",", "0.05904257834001928`", ",", 
     
     RowBox[{"-", "0.05870670099223448`"}], ",", "0.05871584623771928`", ",", 
     
     RowBox[{"-", "0.05870670099223448`"}], ",", "0.05904257834001928`", ",", 
     
     RowBox[{"-", "0.05869642383976281`"}], ",", "0.05842886026927178`", ",", 
     
     RowBox[{"-", "0.058432943475222404`"}], ",", "0.05861855915716384`", ",", 
     RowBox[{"-", "0.05835772119750192`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.05915572510245809`"}], ",", "0.05847789668815553`", ",", 
     
     RowBox[{"-", "0.05817586405647141`"}], ",", "0.05795609041678263`", ",", 
     
     RowBox[{"-", "0.057787914496563814`"}], ",", "0.05763345323223901`", ",", 
     RowBox[{"-", "0.058116788923081794`"}], ",", "0.058376500075910914`", 
     ",", 
     RowBox[{"-", "0.05852405129679559`"}], ",", "0.05915682607670335`", ",", 
     
     RowBox[{"-", "0.05999932725573673`"}], ",", "0.060476312936368876`", ",", 
     RowBox[{"-", "0.060180126090783936`"}], ",", "0.06006580994619053`", ",", 
     RowBox[{"-", "0.059167910641238795`"}], ",", "0.05896481849077926`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.058901043986099855`", ",", 
     RowBox[{"-", "0.059390930301841`"}], ",", "0.058429655554182766`", ",", 
     RowBox[{"-", "0.057807081279062256`"}], ",", "0.05765593042746511`", ",", 
     RowBox[{"-", "0.05708525385387015`"}], ",", "0.05760863255981227`", ",", 
     
     RowBox[{"-", "0.058067382748044474`"}], ",", "0.05838053481382086`", ",", 
     RowBox[{"-", "0.05886951689694664`"}], ",", "0.06023422991296978`", ",", 
     
     RowBox[{"-", "0.06132351459820617`"}], ",", "0.06245143400569887`", ",", 
     
     RowBox[{"-", "0.062341725666002934`"}], ",", "0.061542120583122126`", 
     ",", 
     RowBox[{"-", "0.060318176499198`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.06234997953800851`"}], ",", "0.06086091001886796`", ",", 
     
     RowBox[{"-", "0.0595905993895125`"}], ",", "0.058030126817924785`", ",", 
     
     RowBox[{"-", "0.05731366719956848`"}], ",", "0.05721292308111316`", ",", 
     
     RowBox[{"-", "0.05713872842132897`"}], ",", "0.05768100737451444`", ",", 
     
     RowBox[{"-", "0.05799015654402241`"}], ",", "0.05905040740369524`", ",", 
     
     RowBox[{"-", "0.06056434902551068`"}], ",", "0.062437854312354865`", ",", 
     RowBox[{"-", "0.06378866978118214`"}], ",", "0.06453885441105667`", ",", 
     
     RowBox[{"-", "0.06391541049556969`"}], ",", "0.06283947697517629`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0642950638354285`", ",", 
     RowBox[{"-", "0.06294269596199271`"}], ",", "0.06106514649386491`", ",", 
     
     RowBox[{"-", "0.05958352640603058`"}], ",", "0.058350208211819854`", ",", 
     RowBox[{"-", "0.057356087119814936`"}], ",", "0.05734317355044627`", ",", 
     RowBox[{"-", "0.05746979543492074`"}], ",", "0.057941736742729524`", ",", 
     RowBox[{"-", "0.0590911847352653`"}], ",", "0.06100880403574514`", ",", 
     RowBox[{"-", "0.06331286297662791`"}], ",", "0.06543033910763121`", ",", 
     
     RowBox[{"-", "0.066428079553159`"}], ",", "0.06695313984645554`", ",", 
     RowBox[{"-", "0.06620337963630978`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.06954946988211734`"}], ",", "0.06678110163648625`", ",", 
     
     RowBox[{"-", "0.06324161082569835`"}], ",", "0.06127314420689041`", ",", 
     
     RowBox[{"-", "0.059709908415645635`"}], ",", "0.0584857847855413`", ",", 
     
     RowBox[{"-", "0.0578015348811157`"}], ",", "0.05763169274134685`", ",", 
     RowBox[{"-", "0.05763849780548365`"}], ",", "0.058822866226222785`", ",", 
     RowBox[{"-", "0.06080657766279194`"}], ",", "0.06361086344701271`", ",", 
     
     RowBox[{"-", "0.06694646886448888`"}], ",", "0.06937603115388395`", ",", 
     
     RowBox[{"-", "0.07081249367225287`"}], ",", "0.07052507781221011`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07345324603855852`", ",", 
     RowBox[{"-", "0.07080496030796234`"}], ",", "0.06679871390615108`", ",", 
     
     RowBox[{"-", "0.06322320224014293`"}], ",", "0.06136560154218382`", ",", 
     
     RowBox[{"-", "0.05971788296240124`"}], ",", "0.05831248843334872`", ",", 
     
     RowBox[{"-", "0.05773576968802813`"}], ",", "0.05804126820390932`", ",", 
     
     RowBox[{"-", "0.0586259445408565`"}], ",", "0.060483786092903495`", ",", 
     
     RowBox[{"-", "0.06318927080358708`"}], ",", "0.06716428042505898`", ",", 
     
     RowBox[{"-", "0.07130936820189894`"}], ",", "0.07498772475826881`", ",", 
     
     RowBox[{"-", "0.07600071065550561`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.08435178077308517`"}], ",", "0.0763681613374756`", ",", 
     RowBox[{"-", "0.07061096490598454`"}], ",", "0.0665740366737094`", ",", 
     RowBox[{"-", "0.06343279310050687`"}], ",", "0.06101538816075152`", ",", 
     
     RowBox[{"-", "0.05922102458055939`"}], ",", "0.05866110162701824`", ",", 
     
     RowBox[{"-", "0.0586209067454266`"}], ",", "0.05890447775853525`", ",", 
     RowBox[{"-", "0.05986665274542573`"}], ",", "0.06256290468584912`", ",", 
     
     RowBox[{"-", "0.06633076299528404`"}], ",", "0.07147756409734266`", ",", 
     
     RowBox[{"-", "0.07729928388629975`"}], ",", "0.08417053539189027`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8941261853963747`*^9, 3.894126215807316*^9, 
  3.894126248917429*^9, 3.894126285363387*^9, 3.894126365367679*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"9d2d3521-29e9-4b46-aab7-2ae544901fbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListContourPlot", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.89412316329872*^9, 3.894123293200446*^9}, {
  3.894124089776779*^9, 3.8941240972210913`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"1f173096-a777-4a85-b889-60c0beb1f9a7"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
wgGL3adPSTLjDyPyp85oH0D5TfhH34A3gVeC0F5PMa7/S98GXW6lO3P9z5QY
16gwR/328m5QZ8STBd/XDmYedvOyNWgo7w/Y9OXRpJ828P6AK/t/iahz2VHe
q8Kq08c8FNwS/b5cjzgDxmxxvr5xWiAufW1LuWl6yX6Sof/U683t2evx5Paa
LpsZ3baxB7e3Y3TXCcOS3Lm9gNY1ls32d7T37e5Q409OyPVfnpK97Y3vM8kv
o4fwlAUD31YIZv56hPWPvDasX2BHuaQ6zyewfoHHN8PXZa1XcNPW94PLjD3C
fg97Pb5cn70eI9dnr8fA9dnrcdRH8wXN4PWols7BzPPjsu8ud7UxX8A77e4V
tzJbnC4dC3N36JeKX2x8aXodgIWWIZOraS4g+nfx6ftxNdNKMNvb8ef27O2Y
uT17O37cnr0dR3uvm1/9c+R4d67PLi1gaFTrQe2jfD5AqSmDTg+dyecD1Diw
ZufGZgra8wVyfnu+AM5vz+fIn/r92M4zw+R7vgJdi93/+OY16wnYVzL946sn
rCfAoE/6+PSugvWSkrd8rqVobar3z3LeGIRjpr06ebHNQ824yGlgsTpiv+h0
Fdo3WVK5ggWpXq6f6uX6qV6u3146BFLWNFharYuNeUT9SeV771Iwo/Xbwss9
bNz/X2otnn4l2Ybtfx8xtWKUAbsOLu2yc6AVE5ffevfVSiO6rUueOStIwYLe
UZMn3fdl/UnjyPpTsNCfgu0yVy0/8WnbNUX7/3SZ7tE765o5/W5ytaqBB/PV
girz553YEcC/r0ks++zzSBOmf630GDFM9lPrYOHohP39hgcyT15d5nZsqsOv
v27gd0fDTvnhvjalDk1b68zlG6V/c9RS3RuC7zfqPd9SZFesSbOYvngg+UX1
8OvsuDHHuwQxL3sb9vb5RQsevJZ1uJJ7JvsVBwxdVPFOWyPYZWCRvTG32Kql
erBLh586pYzFPRv8cE79ZjMjT+Wrn7Zngg0rvztc5V4AfrZYu1LDSdixFnTf
PqWq50tf5o7myU92gpF5w/RJP7VfKPvFcrVWywIGJCaacdr2C6VyBl/Sml+6
17D3z2ac2za09pHYB9ofv8Zc2/qVsKMVmL4iZUOfxYF4enz3c8OzA7m++MUX
wxek2sAuA7GwbkTdJssUsEuH3/a3btawO9+bmVsH5k2cGOCH8Y/XbW++JZjr
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
8q8y0/wh+X/Zzyz8zsLPLPzOws8s/M7Czyz8zjS8QP5mIH8zt0f+dSD/OuU3
IfnLmclfzkz+cmbyl5Pf35fiAP7k9zdSHMBMfn8DxQH8yO+vpziACcjfLo2H
G1A8AMj/z3Y/+f+Zyf/PTPELoPiFWEdI8Qug+AXnp/gIUHxEtI8UHwGKtyDF
W4DiLUjxFqD4ifTe2gQUfwGK/wDFf4DiP0DxHzFfSPEfZor/AMWXNIovAcWD
4NP2LEDxJqD4FVD8Cii+pVF8Cyh+xeUpvsW8Of03n4etFehWt1luwG7H/qX4
HjPF94jZv89M/n2OW4s4tohbizi2iFuLODbFK1WKVwLFK1WKV1L9ClK8kvWD
GAehHwQL/SBY6AfBFO9ktstcleKnQPFXTqf4KzPFX5kpfivVV7R/7PFdihMb
KW4cSHFiPcWNHe/RKV4MFC+W3rfrkeLTzBSfBopvI8W3geLVXJ7i3dJ7eBNQ
vBwoXg6fpuuQ4u3MFG8Hit9rFL/nchS/B4rfS/XlavQeAOg9gNyeeP9AzPFg
eLPpi5yzvTieDDua/Om3fJbjHTq9r1DpfQXQ+wqV3ldQPgVnrXiUAD62//nd
huC41mOzf7htQbtUgN6DcDr1A8+0zpmytIIVHjjPD8tca0a7tMHgFKcDff2L
9PU/0nEPovcyQO9ZpPpM2DxMC+hb1cb8+bAh/tN8FUjL2Z0YmWREu7TBYqeE
c4YyBrRLK9D7G66P3t846o86l3pqlBvqyj++3a+eAvSeiP1Y9H6J7+30fomZ
3lMBvaei/rlhfGZx/YumbPeiuXPuo2vBCtB7K+n/H5iA3ocBvScDek8G9J4M
6D2ZGC/c/mvd9SU2KuBsGrHHJbFQc/pudQ5k2YDet4l5BnrfBp+2l6t1btH7
UcWdNqD3dZxO7+uYnfV3L1wdEAwfntvCKqyywLBGo0Pa/6RAwpEFd5I6B8HL
L4efyK9k5fx+W7Y57TRcUtd3fODzYIcNzrbtcerkrGfqidoXi1f4TIFH+YYl
M6o63uVkPC1TtkR3+f8/5Krlw7ttrXPcxry6UmLDndUU+H5Uv30d8W/1VuaA
JdlF63fP7mttzeWNXP63QVVLr3CS/3+EDqL2JVXp08EGz8ZX672nwIfTe0a+
HDFrewk4d2tWeoNQBQLKPQ5a17iYVF4P7bMrjWlSGAwLm8Y4Bxf4wuhDie//
KqGAa5lvT/9eZOe/u/lN7VouNpjovG3JRCc9xL/vOHz2B7FPTfDw6KUd+YO4
fhD1d666OfR4XzP8fL7rpfA1VtE/+LT9onGvev/KWsf3cjp9L/PaOa2+7J0e
CH3H7/l1XV3HvHw7b9KmgieO/w9D9ikKJvuUmexTVN3NPt9PzVErHrm38fxC
X+ze0n/t50kP1GFZm5LjfzXiy8Dqnd4l31J3GvoeV28YsPL6mmOG+5xTX9Uv
cyVfZ0Cy71Wy70X9QPY/0v0D6P5B9yR/ujf50j3JTPcmI92TzHRvMtI9yY/u
TQYk/wGQ/wDJfwDkP0DyHwD5D0R/kPwHzOQ/YCb/ATP5D/Bmm/b1np9z5JsU
6r1202hHPjH/5L9iJv8VJuQuOH891fH/K8o6dS5oEe1gWn9I/kmOt5B/UrPM
8on5Ilbkz9Wq7Er4Fsc43sFTe0j+Y34nQv5j4X9G8j+r5H9G8j+r5M8G8mdr
5M8G8mdr5M8G8meL/lC/c1XqDzPFG5DiDSrFG5DiDSrFK4DiFSrFK4DiFWxn
UvyDmeIfzBT/UGl8ed3R+DLbhRtQvIr9LhSvUml+xXwAzS8zxc9Vip8Dxc9V
ip8Dxc9Vip8Dxc9Vip+DmA+Kz4v+IL0vYKb3BUDvFZDeKwC9V0B6r8DzTu8v
mOn9BTO9v2Cm9xdA+12j/Q603zXa70D7XaP9DrTfNdrvoj6V3u8w0/sdZnq/
A/8HKeCHRQ==
   "], {{
     {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwl0M8rw3Ecx/HP/NgY+0HOJFelRKGUWlMrh1lLkhzGwcWQi8PKZWkXUdQO
O6xJKbkrxZ+g1E4O+xd28Qd4fFPfV8/n6/t5vw+fz2zltFQdCCHMyKDkYiEk
cBN/HVzzd1yI/Z8v4qGM8WPc9bPF+2Zu9Qx/wH1J8gMsyigv46oM8zWcs3vH
u3bv+Sufxjf54NtYN5fmDWxKlrdwyk6eP/MCL/Jv3rPzxW+wqo/zc/w0c8Hr
+CgnPLr4pbMUv8KGfsTzWNBH+Bae6Xs8g119ie/gsgzxFXyJ7sPn0ReiN52U
jjKBT7gucb6BPwZqvI1/ZCwlSQ==
         "]], PolygonBox[CompressedData["
1:eJwt0T1LglEYh/Fzn6f3NzOai2gKgiASMhAEURAaKiJMoqEaWrKipUFokXCJ
hIIGB7EliPYgqI8QBE59iZY+QNfNv+HC3wPnOZ7nPnMHp1u1GEKYpT7asRBW
+J2nZ5ynATxIBbxqWtdPWdykCZyiW3xOY3icLvE+jeBROsRtmsRp6uKSae8h
KuNj01rfo4a/aAMXaZqDLprONkW7eCYJ4QW3qYJ/otzyb+C5w3MdX9AHbkT5
hB7xDWs+8Tu94l7Uu9f0i9+i7Ht8481Ea/0/77APz/c6ombUmfxsPtMFfGWa
hc+ogYtRa6t0hlNR9m8s4yfTt/od9PC9abY+swe8bprVsL+Dt032Ge/hZUr+
7zKD10x35XeYM53Jz+ZrlvAf8tUrhA==
         "]]}]}, 
     {RGBColor[0.3854316217415378, 0.4391612728165149, 0.5924938709251024], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkDEKwlAQRH/+VhaWEggWyRlstBWCYukNtLAR9QSpLL2A19A6JxCCKQQJ
xAsI3sEZdorPm112d3Z/sT2tjzGEMMYzvE8SwgLswR8SD+g3uEc8gj6AT+Vf
4ADNE+ghuER8ha7ANPqcAlwpX5rHzOfgHXEN3ZnP4syvuR91a+5H3x14UT37
OumbeR3ruddZXvQspefmj5o79roxi+7HXt7aJn5LA27ky7sb5Xlrrv35T5k0
b600n/4z9U7BPxIWK/c=
         "]], PolygonBox[CompressedData["
1:eJwt08FqE1EUxvHJxH270G1FdGOwpFR0EVEqaqQhgglqjEQFm4XZdNRVs4qL
BNKFNpBIBAXT2BKJD6BEMM+gJBsFfQRd2H3/n/MtfjDcmXPnnHPPPfEoKm6G
QRBkcASvEkHQQx+v8TIZBC/wCZ9xlrVVnMN5pHAaaazgNm6hgvt4iAfYQBXb
aGMHHTxHA020cA9l75nynmn/U/9+SrJPsIBFPNMatlBPxDkq1wKKuMTaRazh
Mt4TM4SKjnCAf5jgC34T88s1q/a3xLzBLoZYxhnnqFznxMy8h/aqsfYYm4hw
ARnnoFwi/7uN7TDOUbl20UOOtXV849vvuI4s1pEzPedxwz2uuMfq9Rwz3EEJ
Bdz0mehsPmDkb/Rti3813ZP/vXGte9jHVVxxDsplyjdfHaPYyLXqDHQWHzF2
j9Sr49S0hLsou8au1/Su6tlQz2quWbUfZe9jYXxma85BuZwi5mQy7rl6X/be
f3j+656qt9eQDeMe5d0D9WLRs6Meq9cl92rs3LOO1Yxp1n7iB95hEMZ3ou+Z
0GwM/E49mXqGJo5RbN2z2fCsK0flqhpUS8uz3/bdUM2qfeSz6viu6E7qbh4C
WahuIQ==
         "]], 
        PolygonBox[{{358, 21, 313, 314, 315}, {310, 309, 312, 21, 353}}]}]}, 
     {RGBColor[0.5640527029025629, 0.5019354546941914, 0.4874897848751707], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkk0rRFEYx++d+wmUJNmQlC8g1iZsNF6ywkap2TCRTInVTA01ezULWZGi
ZmpSxEJSJIY7XkYheWmUTCkfwO/feRb/+f3OM+eec+5zT8tkYngm4nleFwnI
Cj85GIO7ZB+/gANMGsP74CqZwhPw0fe8TrwCexjH8Dictfm9sEbS+A+sZ60s
3g3nGY/jc/CN8QP+CvPkFD+DRXPVtuw8OtcJucGPYZSs4UlYJrd4CN9tjube
eW6de3Jua2rtP/KE/8IhzjGCd4jmqu3w3zaegVXGKfwbXpFFvARDc9XK5qrl
rT/qU2hn+4KbjFt1Ft/1RmvqmcbAjdWzI/waP4TrzGvCN2CRtOMF330H9Vl9
jFr/9R2S1pOlwM3T/AXfPa91UvCA/0r4Hly2uvbJ2PfNwjbSj39Sf4aX5IVU
eaaiOqyZq9Zs92cwcMnZnWqw99L7Tdheo7DO7oPuRdzOPx1x+2nfD9/1Xf1P
w3/JK2JV
         "]], PolygonBox[CompressedData["
1:eJwt1F1ozmEYx/H/ixOKLHmJgxmjEBFtyUxmm/WsDc8O7EVhbWRkGifbETE1
FlPmpShMsSyEA7NpHCgOZtieGZuSkrLEyhz7/rqug09dz/3c9/2/7+u6/v+M
6vrk4SgIggpMwRx+zMbdMAg60UC8i/EyIZ7AH2TGQbAE7biIdCzEPP6biwws
wnrGWll7GfnEX/GReBhjxHt4xm7UoBbLIntWETKJp2EqpmMGWllzFo/wGJ9Z
k8XcpXhC3M3YUyRRhjrGDqAeR3AVV3AN11HJnIrY7qS7DTL2IbQcKBfb/DzK
wXbiNMxEAsWYxdqT/HdKufMcpPue2nuMOaO4gZuR5VS5TWEYpxlrRgdu435o
d9GdHoaWI+XqFd7Etof26sML9DL2jv8G8Iz4BGuOo1l7C2Od/NeNO8SLI8ut
7qS7DaApsDv80FmZ00/8BZPEvyK7m+YMqrZeT83X3ct5xk7cQ1doOVFulEPl
ckT11hnxHudxzmukWqUwhJ8Yj+1OfZ4T5aYQVTyrFi2R1UC10FgJ8RqesRpr
sQ7/GJtEj3ITWQ8kvUfVqyuYs9zXaO0C5sz3nlXvTqhm7D2K37HVKOV3LPee
Ue/cQgdex1ablHqa+DtGAuvxb7GN6b8h5S+2M/V4T6g33rJHf2g9rl7v8lyu
xCqnuBJVodVEtdEZ/8Z2Z909C9koRQl2IIlLaPeeV+/nYANyscl7RL3SgjMo
wlYkVEt/Z/TuNOCoU9yIJn9na/wdq/M9tFcbLiAPm5GPAt8z4Wcs9TPk+pw8
n5PvZ9BZHsTWu+rhLuJCFCAPW/BSfRXYO/CcuJo1e3EQh0L7Ruhb8UnfitjO
3OjviN6V8ch6WT2d5t80fdtSjA+7lPeUeivbc61n6FkbY/u2ab3ejf2M7fMc
53gO2rwGqkUxcxJ+B92lNbLeVk8fi6zGld6j6tX/TkO0Rg==
         "]], PolygonBox[CompressedData["
1:eJwt0D0vw1EUB+Dbip3FUIuS+Ag2C4OGSROTCJGUwUtjMamlwsZoVyQWYpH4
CCKlEqJaL4uJiMQn8Nz0Dk9+/Z977u3JyS+Wi+vZEEIf3Vx1hXAvP+Q+B7xn
QnjjlRFnLfmg3oi9XKtdyHHGKHCoNiqLeqeZIadWkd/qX/zQVvuTx4aoUaak
tic39Q77vSaXWKaZZoiz5PT0s+P+mVpVTjLFVpohzlJhm2qaYU7Os8ANg2oN
WecufnszzwAFZ0PZzv34TjX9165c1buS6cwX5zyXn5nOnXg37izurqX3hUvq
ztryNu0t7u+RJ2p6jzhJM53K37SjuKtnmkx4e1ZtQ/bQyz8aHj51
         "]]}]}, 
     {RGBColor[0.7426737840635881, 0.564709636571868, 0.382485698825239], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1lEtLlVEUhr999k8wMqhB3jhFUAmFBkV2pZAuOCoaJIYIKXZBatBlUGEU
STYxhISiTEvRMOvY6WJSknEkCCnMwEFUBBJh2MBRPS9rNVg87/72be13r/0V
1BypakwlSXKGiMRwSJLVcATW07EffQ52EPXoh/AufQXo23AX7Sr0XjhFuww9
DY8lNr6BOMvC3fA0rGbcbnQtfArvEz3EQfr64HX4ir4mdGfKvvUrL+IA6+bB
lcH207574CHfR/vd8DyVbxfRiL4Me7Qu+l60OZpbBEd8L+1ZQuxE/wiW7xDR
JabsPOM6O/MH0a2wws+ySf5Ey7MdLqS9HT3hPii348RFz+dOyuZorvxo97n1
cJXnoFw20G5Bb4F/iHH0Z3iTyKC7YQlxDT3L+F50Vn455W+O+EL7DfwW7Uxj
ic2fT9nc33CCOIX+mbI8lE+dj8+4Dx85z1p5CKv9vnRvxZ7zcpijbwU6G2zP
jO/31jnk+pO35xlXCv/CctZqQ1dEC+km+IC+EnRfMO/kYTN8kVgOqo1Brz3V
4Eu/01tw2M/+zv3LuS99vmYDLHQP09HqXvU/Eywn5TYWbE7W67XVa+BStJDu
hBPEa/kEjzJnCfpwsJpT7Y1G69OYMdhO31J0mzzz2laNF8MFieVX6t/VXxbs
+xrY7+sPwEpiEXoHXOg1kwe30c5Hb4Yb1YdeH+zd6v12wF7fb1+w2pJHU/Bq
NH8fR/NDecqLX9E8nIWVOgP6AkzD8sTuoMvfezOs8ZyV+7g8Qn/Xf4D2YvR5
uNXveh2c8xxU77U+RmPrPP8Twc4grW9X/OwnNdbf3aT36+zKS+fLc0+nvU6+
ugelfjaN1TrL3Dt5mA9HvZ5V1wPueQvMRqu7Z9HGabze64zXz1wwP9K+ZpH/
cwpT5ov80X8x7bWnt/j/3b6HT9x/3cOHaG8m5z7n+5rPg/ERzHieynfS70h3
Vex1pHf7D3lBv7I=
         "]], PolygonBox[CompressedData["
1:eJwtlEtIlkEUhr/5v1bVRrMLaKBgFASRUNSuKLtIofbrossmjAgqjNQKtIK0
NMqIhIwiy41kWmZoJZbdNMwLWQmmoVCUaGjRRYp2PW9nFg//+5+ZOTPfnPdM
Us6BaG4kCIIcmAb3wyB4zO8TaEU/DE3fgSr0OPSj2+EtOsMFQTpEIQu+kqyI
sVPwDX2EOTfQlZCKfsmcFHQSdKILIB8KoQiOMqc2sDVa2wNd6Ba4jf7MnBXo
lTCKriHWjO6ABnQrscXoeM13Fuvw561Hx4d2tvMwHz0KneiXMIZ+oxzoHhgM
LaaxIX0P+hXfdBCdp+9HlxGrC2zNLXQxe56AUiiD76Gt1Td8Qd8jtgg9D8rR
h2EOeiHcRTeRc19ge7Sgi/39PYBq9EZiGyAGYmE/axYwFqcaotfA3MByrkK/
Z00v+iE0oW8SW45erzmsrw0tt+7gSWh3rLv+XwP0JEzAT/il+rNmDCZgEj4S
+wDDMALP4Rm0yUeh3ZHuSp7oR8+EVHQ6rEa3wSMYhhHlc1Zb3VGbsz20Vwy5
YkOrucbTIJn4H/jtcyjXccaPwTW4DntC824D7FQtvR/kmUZ0iTOvyDPVzjyj
/wnyvPd01OdU7iTWJMJ22CE/widoV144CZcD84S8sddZLuXcjc4gVu/HT6PP
EjsDF6DCWU+1ez/3q97OvKKarkN3qx/keXkptJqqtspZjq6Ei/6MOmsNd1LA
WK7qGbEaDfsc3f7M7b5mqt0Lv796vBedDVk+p3Ivc+a1WZDizIPy4ibYDD9C
6x15bgpdEFrvy8Py8iGdR56AfFjiLFey+gc95P0pTzc661H1qu40Dd1H7BVM
Z+2MiHlC3oiD2aHdaZ2fnxnam1Loe1K9menro5wJ6EuheUNvXgW6ytnblKgc
6BL22BVYT15FX3E2tlT9gt7q7Ow68wB60Flv6b++pRu6/Jn7/JtQ6muu2p8j
Z7m/E91NMWwLbE/tnQ1ZsAWisDZivaMeSkW/hj7fk+pNvSF6S/RGNju74zyf
Q7newYDvGfXOuLNeUk+p96acfZve6L86a8S8Iw89Rf8DTpnaUQ==
         "]], PolygonBox[CompressedData["
1:eJwt0T9LW2EUB+CbBBeVLv4h0Q5NoIN06FpnJRqikUYXdSsUlNLYouAnEEF0
MENAB1sXZweLlFbFKUQkFop2UbDdikWon8Dn5WZ4+J17zr3nvZebfbNQriSj
KHpKG8epKDriOyeuv8kqx+qvcpIpmtT1/shbfvMpEUU7fOaF2aF8sHxT/dz8
Sv2LEXWeITbM+mSXfl7dL9NkknE/zHtlmky4TsTv+kEussS8e+d4z7TZOznr
3hn+t87PpeKdYXeOsl4pGe8Mu+/VK+H8VNwP8/HwrozylpLeUOuscOYaFb1V
uc4GYxT5mYi/J3zXDdfssqR3Ks/5qG7KC36EM3nNAAWzl/Kv92moL+Ud/1i2
O61XlCUmqLJJjWdm27JOVr0nG5xR8PxWeLb1D8K/6KGbQWpmr+QXDtgPGXbI
Du/TzhOG9TrlI19SQeQ=
         "]]}]}, 
     {RGBColor[0.9034017356588839, 0.6285043391472098, 0.3005453805425401], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtlE9oz3EYx79/ZGlcJoeZP80Nk/wsG1LigBKZ3xzMLksODtMiE/n3cxCT
A0Vpv2ixlMZBvx/R7M8B7cAZrbUiLIfJaYeV17vnfXh6vb+fP8/veZ7P8/wa
u061dWdJkpzEcqx1QZIMwGY4zcJ79Ce4ASujm2AH1o9uhPVwHbbW3GZdTZNk
FXwNn3PuJfoJ3IPdRu+DI+ytRj+A+wniELoui2+t34ETWAH9AZ5nrxN9Lotv
rX+Eh9OI4yBcT9w30JvwX9VvYoPYCu7sgH85M8heBV2BZ/PIV3k/c5yKt97x
LM0iDsXTB3+z9xU969rIj37nBXtNcAjede6qQTv3j6Bb4ITvTMI1rqFq2cxe
O3oznE2jhvOwlEfsZ+DxPHK5AO9hQ+givJVGvStpvJly6WF9Lo98lfcj+5G/
FsezRY/O+V1gO3ql36UBPsbG0ANwr+twAL5K440fwk77qcHHFXSX3hG+484o
ejyPPZ1RDf64bqrf7iR+t+BaqCbqtRPOUbkuzuJcLfznu/LR4/e6Co+6bh16
I9fkfh51kdaa3lt1+AZ32qd8T2IX0cPws3tJvVZ0j52GC7OIU3Vakkdfqb+O
eRY0E3VYSbFxdsQ99xTmPq97l9yf6tMG17k+j5qqtuq1At83NXd57OnMcueh
Pim7v+WnN409ndE8fXEuU/Ca36KURe/Kv2ar1v4XwV7nqHn6nkX8M3AjVkS3
wTH7VJ1qnIty+uHzuqc+3ep5n05D/4Jv3QPqhbK11mb8FnN+56rnZ949/xMO
24/8jboP1Y+XnZd6rd9auV73rJXS+E9RTdTLU45/PIv/FNVBvdzKXh96WR6z
qpl9A/8DX6WYrw==
         "]], PolygonBox[CompressedData["
1:eJwtks1LlFEUh+87N4iwldCiTeGmMlyYWZDVIqN/QKYgQ5yC7GOkWqgFRlAQ
kWbYpi/SStAsaNNkjERfNk5RY2kbg7ZBpUFhRdmmnh/nLB7mmXPPvfec+56K
PYcbDqVCCNtgAXxIQtjMbxU8xltY3AsH4CCUwVbWauAt60dhKV4J5/DpxPbq
jBm8COPwGkrwC37CPPyFBs5Lk9sEafw8sR5og3YYSezsDfAI/wR1+GooeI5y
O+E41HPGFsjAbrieWK5qPIHn4J7fobvWkrM9WA3V+BixZzALX+FbYnfrzu/4
RnLqg73BJnwgko8/hf5oe2a9R/W6npwdwe6oxd/DNPyGPzDMngesDcEN/D6x
HORhFGbgFGvdsJj1bv53QY/eCo5E2zsILfgwsVueo9wXxN4FrxEfi1ar/hei
IVfOR7wI41CCiWhvmPEZ0CzcIXbbc5Q76rWWYMKRT8KUI/8MX1LeA3d1QRle
G80VWxdtxjRrWWj1HtVrO3RAP/T5G+mthmDQe1bvBXjuMa0dS/lswU78ZWKz
q2/4TzNIbB7m4AesoYazXl8NvsjrU2yhamfPcnwZnMGXeD/6RuX4iMCL8Arf
5fOlGWjCVxFbGe1O3X0VvwJZaI1Ww5zPiGblTbSzNCNP8Aq4ht+Fi/h+2AcZ
fatoPaZ93hrxS9Fy+6DZ78j6Hu2tiramM1fgF6BXb6C+oTPabKmny/hpyOED
0IHnE3sLvclD/GS0NeXcxP8D236czA==
         "]], PolygonBox[CompressedData["
1:eJwt0U0rRFEcB+CL+AxWRBmSYqMoi5nxDWRJmC2hvC2QUhbYkA2aURamsFAm
KfIyY7DAxkY+AFHK0suG59ZdPP3O/f3POd25U5Ma6RouDYKgknJiZUGQlrWy
ngY2bUjp0jLDFgVmdXl5RZFvvjiLZs/hXucvrTNyI7yLbXK6fbnLHh32duri
MkGSGHW8lQRBu9mnnPQ8wRi9uik5o59mnirdmlx355F1Vq6wSlHfqDuW19zw
oL/nlUez2/BZf8cJTbonuaRfZCd69wWZIM44Wd2oPI/OHMhDcpxSrbuQeQoM
2NtPHxmzHtnKsnVbdG94/3v4+/lg3uxF/jr/wx9JXYWuhW7r5uibhd9uiMHw
XPT/zcl/24RDkg==
         "]]}]}, 
     {RGBColor[0.9319354546941915, 0.6998386367354785, 0.3889999095519934], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkz1LXFEQhu85107/QIoUsRADGowfaTSFln40gqAWBlKsEILaqLsYFAsJ
KCgxCn6EgCgikiZqYxMkxLUwW6QyEkihqGijIIiFkDwvM8Xs89575sx5z8zd
J6/72/tikiStREpk+JmHA3CMhU70W1halCRZ9CF6hbUt9DishI+JZ9rPWgO8
4/0e8R19kFot1WxMrcYAkSPOovESnhLj6HOYJe8r+lNq+1WnAGtZa0G/gPmQ
JPXoH/Ce5/fo39F8KV/7T4L5OofTrGXQU/CN3ysTbb/qXMBefz8Kn3LebGJN
qeK5GVkTrRfKUY0ietKGfoXuJnrQXbDM87Vv2M8d0lnEoPzBOu9JLRzxvTm4
6b1Vj2+C1bkOVlc52Wie5O0fuimahwb4Mdgs3sHdaH3eibZfdeSrOLU+l8Bf
3v9CNH/yqT4VvOd5mPNZaCYbrPWj1+Gi+ohejna2PNSrDnmr6AnY4boVlrnn
CviBWEMvpBbSI6nNSfPaCzZLzfRWPfN7TQe7m7TeXbp/3eOz+1mCs0QvegZW
U3cO/Ty1O+vuV9H8ydsk3Pe5fIEv/S6abbl7lvdj93PvfVJ99eIo2Df/E34L
9n/4Ax88/y+88hzlNvrcNf+8n6vzl93/I87d9jqq9x+QNXXQ
         "]], PolygonBox[CompressedData["
1:eJwtk0tLlVEUhvf+vo88CjkPcmBTL4M6opm/QGfBceIFErELXoModSBOFRQt
JwonSIkMJ2pFkgPRcJL+BqGUIDxQwQlSgp6XtQYP37v3WXvtd629Tm3fyN3h
JITQChkcsxjnOwo76P40hBfoJRhAz7N3H90Lk+jXMIJ+Ap/RGTEpXIVqCOzd
4dMGKTrHXoXHKPYkhtDAb43wFf0usbsfQRG9SswrKMJLz6ncdZith/ce/wxu
sL7Fuh3dAXn0v2haez/RO/ARPsEubCTmXTWso3/AtOc7RV/LzIvu0F23WbdA
Hpqggr0riTUvZnZGZ9XDM/QkXteC9VC9bMtsvQqF1DzIyz4cwBzUBOvJNrqH
mG5ogEaYSe2sciyg++Cexyj2wHOdQwk68VCAZmiBKmIq/Q30FpfEXESrQbXU
J9YvvZneruS5yvAn2hvoLZZhBS7gL1wntga6oQt6oBce8tsD9yivOfUsM0/y
NsXeFldtqmfoVp831aderft8aeYW1dvEZk/rCfSHaLOjnj1HH3J+P1jOt+p9
arm1t+ee5X0QhlLzKK/yJG8TPt8D8BT9PVov1BPN0lG0WdbeYbSaVfsv9O9o
OQe9ZtWeT+2/o5puomcTy62a3qC/+Lxo5r4l1uOyv4nepslnbYyzj+E/D1Bu
jg==
         "]], PolygonBox[CompressedData["
1:eJwtzz8vREEUhvHZvRRW6wvoiLubaPzXaNGoNmyILUgUhIREY22lFw1R4QtQ
CJ0ofAeRWJVCh0RiSfhN7i2ePGfeM2dypre+MbdeDCH0oBM/Dm184sD5l7+S
ECbUb4UQvtVtvMhbuMe23gNX5GWkOJT184eZdzyhLGtxoUOBcTOzyknecncT
TVzJGvxXzN7pS7Kd4m67WJTN8wJqONW/lF3wGc4xIh/GEKb1Un7O//SY7x7/
sJTvMMXLqOPOjhXZNd/gFjPxXdlOfNvuo3h1tynrlnWhlGTz8Z0VVPVWeS+v
G7wfZ5CaH8CgmSO9sSTLY/8Ea7Jj/gfwpDVd
         "]]}]}, 
     {RGBColor[0.960469173729499, 0.7711729343237474, 0.47745443856144676`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkbFKQ0EURPft20IMIhIkjUgsJCiCwR/wH9KkEaOBoDamU0SJ2tlpIyIG
FPIBahmwEAQl+A8SEfwGQVHPcG8xb2Z35+7OvW+m2a5txxDCAsjBNZ87uAcv
pRBu0FW4iamObsAV1kfoOXiFdQO9B1+CdfQxPMvZIXoaHs3N/8n+B9hFv8Lv
0TzyToEddAkuJ/O8cP4DTtDf8DPooIdeJ62aDc+mjO3cMiv7WrA8W2DM1+Pw
iOdRrgnWm+gzavej6dNoPeueFp4D77GQ7E29rUy6r+5v9HxuXXjV/ZrN0DO/
RZuLvB34KQthEf0An/u7ylJBL6Pno53J04e/MtvXed/3HzObkWY1gIvJer2N
Bun7aHep9jez/pX7gr0rz6x/XvL5Tyabtfr7g/8B0+M/EQ==
         "]], PolygonBox[CompressedData["
1:eJwtk71LW1EYxs89uWI6aIdOSitUh6IkZjKY+vUPtItgnLRtglQFIyh+S5Kx
Y6mDiB26Ki242LmLBf8JbRsIOOhQIYFGpb+H9ww/8pz33Pe9z33OyfPC8mTJ
O+eyEMM5iw1+q/CCQpH1NPotdLAeSTj3EkbRY1BFV2ALtqEJDfgHLcjAIPTD
APQw7xn8jZy7hRid8Naj3khmQk17ZXjnzMN7bzM1WzM0K42HVGye5G3fm9cF
eEI9x3oYUnoWxmFMs9lrg1V6VsI36Fvm4Au9J7CGfg2vIKd3QA9U2FuHp+hH
kIS8cvKWibKZoiefsFo+eJCXM2+9ZfiJLvJMAWZgFrL0DsXmSd48OorNs7wv
UlsIPcXQMxMyzoSMlbVTltAGMXTCY7gj8xa0MysJh96yUsYH6G/wFY7gGJo8
2wg96n2ACZ7NwBW6xMyl4Enebqhdhx71pkP2OtMozNTsT7AH3XxbF5yivwek
e6n1xeZRXpWBslCmU+FMdDa6Q7pLl/ALLrxl+wHuvJ1ZLmSqbLeovWFvHnbQ
nxN21jrzTXTd293Xf6DmLTNlpzumu/bRW69m7Hp7p979B2rwI7JslFEdfe/N
i+7Mb/R/nExe3Q==
         "]], 
        PolygonBox[{{659, 658, 655, 104, 661}, {489, 47, 451, 493, 494}, {
         1045, 118, 709, 684, 685}, {689, 105, 667, 1049, 1050}, {885, 176, 
         923, 877, 878}, {1059, 1058, 715, 119, 1056}, {1035, 95, 606, 1032, 
         1033}, {1029, 1028, 607, 87, 611}, {890, 889, 888, 160, 879}, {483, 
         482, 486, 63, 504}, {1065, 128, 776, 772, 773}, {769, 768, 767, 136, 
         765}}]}]}, 
     {RGBColor[0.9890028927648066, 0.8425072319120164, 0.5659089675709001], 
      EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{1021, 62, 1022}, {504, 62, 483}, {878, 159, 885}, {520, 
         65, 508}, {508, 65, 503}, {896, 161, 883}, {489, 64, 510}, {885, 159,
          869}, {562, 65, 565}, {483, 62, 480}, {879, 161, 890}, {823, 159, 
         822}, {480, 62, 499}, {867, 158, 874}, {831, 161, 830}, {1023, 64, 
         561}, {890, 161, 896}, {862, 158, 867}, {494, 64, 489}, {819, 158, 
         1071}}], PolygonBox[CompressedData["
1:eJwtk0lOQkEQhh+Ph4kjzhIH1DiAEFAgwYjzAXThQlyrKxd4Ab2DxnGle4zj
Ao/gcAs9gFtNHOL3p2vxJf/rru6uqr/e8ObuWsX3PK8EAdzxcQv38ACncAJt
bLbDOfoMOtCdMBX2vElIQRpy7C1xzzLk7Q7d1UtsHzyjn+AFXiHLWgZmOTsH
g+g49MMApGACIuzVQREuufsCCmGXg3JRzsq9FR0NXI7KdQE9D+vElmEVVqCk
N+GQmAPYg33YCbu79UYF/RlytaimD3SMMz3QBd2Bq0G1JNBJ8DkTgl/W/nwX
o9hr9A34EIIAIr6rWbUrR+X6pTfhG36ggbV6KBO7AcdwZJ7Imyb2Gi1Gsdus
bUEzugUW1QO9ha6DLDpjOSgXxTRbz9S7sGoI3JlF64l6ozf0lmpSbW/w7jtP
5E0UWg1peZq1N/W2clJu8mDdPFi1mUlZz9S7UWJHYAiGoQB5zRnkbAY1i/JM
3slDeVmEaTujs5oxzVpS3kAK0r7rqXobRw9CCWasJ1nrcdnWSuaZvKvClVE1
D+TFI9R8l/OozbhmvWZ7EfNansrbAZttzVDMZiZhM65ZH4cx+wf0L7xbr8ds
7x8cIU+g
         "]], 
        PolygonBox[{{1073, 1072, 869, 159, 823}, {1022, 62, 504, 551, 552}, {
         1079, 1078, 883, 161, 831}, {565, 65, 520, 1026, 1027}, {543, 542, 
         499, 62, 1021}, {1071, 158, 862, 815, 816}, {830, 161, 879, 1074, 
         1075}, {555, 554, 510, 64, 1023}}]}]}, 
     {RGBColor[1., 0.9499999999999998, 0.7499999999999998], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{237, 76, 241}, {562, 76, 561}, {278, 147, 277}, {284, 
         147, 278}, {819, 147, 822}, {242, 76, 238}, {241, 76, 242}, {277, 
         147, 283}}], PolygonBox[CompressedData["
1:eJwlk91KlVEQhte39udPmv9imuhu+1MbBSsihBTtCjzoRI/FY72CLkKI8B4E
iU68BfEmMi0tFQyystKtz8McPB+z1sy31sysd2qrG2/Wc0rpNZTwgs+jIqUx
WKikNA817CGYwXfF+jNxB9DEj7OsR/FV4Tn+OZjEfgxL+KrEHBF7CNesn8FD
fCPwlNj78BvfH3hL7DL+J/jq3o+vG/7iu4JO7PfEXGP/h3fYdWOI7YB91nvQ
ht0ONXzN8JPYC1jEd8v537FPYJr1CvzAvoQ2Yhuse/m3D3IlYow9hnqOMzzr
DCrETxMzWERN1raG/1eKO717k/U/7BvoNR9i+ontgakyarRWe2yvrcnaEuvt
HDmZmz2yV97p3afwMkfN1m7N1n7DGV9S9Nze23N775v5djPsfcM+h1c53tS3
fQDd+HfZa8FuhmF8H1iX2LfE95fxxr61GlEr9she2QN7UWXvHnanGigD7S44
zHGGZzVgi3WGTylyMrcdKOw9DJSBdsU7ysjJ3JrgY449fa1qCntCTRVRg7Wo
AbXgnj7/8V9rsjZ7YC/UgFpoUMPXFD20l+ZormpQLVqDtagRtaIm1aZv7tub
g7nYA3uhZtSOZ3q2M+PsWLO1z5pzETPj7PgGvoUaUSuLMF5EjLHOiLOiptSW
M+qsGmOsGlNrzoizoobUkj21t86ks+mMOWtqUC06Q87SHfxoZ4E=
         "]], 
        PolygonBox[{{561, 76, 237, 233, 1023}, {822, 147, 284, 286, 823}, {
         565, 234, 238, 76, 562}, {1071, 285, 283, 147, 819}}]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{517, 514, 558, 570, 600, 1034, 1036, 637, 657, 1042, 662, 
         660, 683, 686, 1046, 1048, 1053, 1055, 1062, 738, 766, 770, 811, 816,
          1071, 819, 822, 823, 1073, 1075, 830, 831, 1079, 1083, 846, 855, 
         1086, 828, 1070, 784, 774, 1066, 1064, 714, 712, 1057, 1060, 695, 
         1051, 690, 688, 1044, 664, 1040, 1038, 612, 1030, 575, 1027, 565, 
         562, 561, 1023, 555, 552, 1022, 1021, 543, 1020, 1016, 517}]},
       "0.0016`"],
      Annotation[#, 0.0016, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwl0LFKglEcxuH/ZwpFhEREECGFiChI0iCk1B2E0FBbg9LioEO0SEOXEER4
D4KEi7cQ3UXR1OLiYFBKTzQ8/F4OH+eDc9DqnXeTiGjyYbwxI5eK+F6JmJO2
Eyocc8laOmKdO/uBTftJHxkyYtvZDnvkKPDufPF3n3vLHHJFmw5dbrmm6vsj
enafe26oOatzZl9wYje0olnNULKLvPrXC/t2nom9q2N9ZsseaFY3aNsZPdWU
ruqP95gz5ZMlZedFvpL/d/sFK+MiEA==
         "]]},
       "0.0014`"],
      Annotation[#, 0.0014, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwl0DFLglEUgOHz5QdKg3tDQ22BtAUZ+Q8CIagpC74lHFRoSoKiXxC4hYFD
U9DaEDQEUkv/QcPAzaXBwYR6pOHhPXDg3stdy1r7zSQiqrwYnnllzIgh36wu
RcxyEVNy5qDENocU0ohjPaLNBTd0eOCRN975ZMCcH34X5zl3g01qZNRp0KXH
PXec0+aKM7bcXWbPfMCueUdLWtSUAsuM3fXFB+v2T7qiXb3lmktOyTghta9o
ovnFm/3HlAn95P/f/gCbrSlj
         "]]},
       "0.0012`"],
      Annotation[#, 0.0012, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwl0T0rBWAUB/CHKxK+gcUihfJOsfARlMHbcKWbJC+Dl1AYLJSSRXe4RZKs
JFLS7XYtDCZksJBIISmU8rsZfp0zPKfn9D8lfSPtw1khhElmNeOssMcJt7xT
nB3CdySEZ/0V56RJ8cgvb7xS6m0VtdTRQCMd5OWE0Kt200UnU0wzyQQrLLPD
NimS3HHDF9d88EOZvUqpoJIeogwwRJwEm2xxyhkXpNllgwXGqLNjExP6RZZY
ZZ0Z+okxSiv1mRlqqKbcbJEaIY98CijM5Gffex544pILjtgnQZx55hhikBhR
2mihmeCf3EwGMv/khSTHHHLAWtb/Xf8AtLxBag==
         "]]},
       "0.001`"],
      Annotation[#, 0.001, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0E8rwwEAx+EfjpyUFzAlR1fHeQVqdnOwlKQVxeSgHOYgf1bagcjiMn8S
K1pEs4ZFs3Bz2mElKU5S2onH4bl/vt/Q8ERkvCkIgkleW4LglmuuuCTDBnFG
iTHEOmmirBFikE66aTQHwRcv/FCgRokbsuyxRIpppogSoYcu3sXVKZBnhRn6
GWCObc4o88AFR+Q4IUWCWZIssEyaTYqU+OCbBr/cc0eFJ1r1tBGmjxgjjBEn
yTxbZDjlnCrP/1v4pN0/HfQSJkGSHfYp8kidGhXy7LLKIlmOOeSAMlXe+APf
WUdF
         "]], LineBox[{1008, 1001, 1004, 1011}], 
        LineBox[{537, 531, 588, 530, 584, 590, 537}], 
        LineBox[{795, 793, 794, 839, 841, 797, 795}]},
       "0.0008`"],
      Annotation[#, 0.0008, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{580, 579, 616, 621}], LineBox[{796, 848, 904, 847}], 
        LineBox[{908, 947, 986, 987, 1013, 1012, 1009, 1007, 984, 977, 943, 
         940, 903, 900, 843, 838, 835, 829, 791, 787, 790, 792, 750, 749, 723,
          722, 718, 719, 743, 747, 785, 788, 825, 836, 887, 892, 894, 902, 
         935, 941, 971, 981, 1003, 1010}], 
        LineBox[{1000, 978, 979, 982, 968, 944, 948, 969, 988, 992, 994, 997, 
         999, 1006}], 
        LineBox[{526, 522, 462, 457, 422, 419, 413, 409, 406, 401, 394, 390, 
         385, 378, 371, 368, 362, 357, 352, 387, 416, 414, 381, 338, 334, 331,
          328, 325, 322, 319, 316, 359, 374, 433, 436, 474, 478, 484, 485, 
         548, 553, 593, 595, 626, 628, 652, 647, 676, 646, 704, 673, 732, 700,
          758, 726, 805, 753, 858, 800, 917, 851, 953, 911, 950, 954, 956, 
         957, 961, 963, 995}], 
        LineBox[{305, 299, 347, 302, 428, 344, 470, 425, 534, 467, 587, 529, 
         583, 589, 592, 591, 547, 546, 536, 539, 472, 473, 432, 430, 364, 354,
          311, 308, 305}]},
       "0.0006`"],
      Annotation[#, 0.0006, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{464, 461, 521, 525}], LineBox[{945, 985, 946, 907}], 
        LineBox[{991, 910, 952, 850, 916, 799, 857, 752, 804, 725, 757, 699, 
         731, 672, 703, 645, 675, 623, 649, 582, 625, 528, 586, 466, 533, 424,
          469, 343, 427, 301, 346, 298, 304, 307, 310, 353, 363, 365, 358, 
         315, 318, 321, 324, 327, 330, 333, 337, 341, 349, 351, 356, 361, 367,
          370, 377, 384, 389, 393, 400, 405, 408, 412, 418, 421}], 
        LineBox[{538, 535, 545, 544, 477, 476, 538}], 
        LineBox[{837, 834, 840, 893, 899, 842, 837}], 
        LineBox[{976, 975, 980, 1002, 1005, 983, 976}]},
       "0.0004`"],
      Annotation[#, 0.0004, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{420, 417, 411, 407, 404, 399, 392, 388, 383, 376, 369, 366, 
         360, 355, 350, 348, 340, 336, 332, 329, 326, 323, 320, 317, 314, 313,
          312, 309, 306, 303, 297, 345, 300, 426, 342, 468, 423, 532, 465, 
         585, 527, 624, 581, 648, 622, 674, 644, 702, 671, 730, 698, 756, 724,
          803, 751, 856, 798, 915, 849, 951, 909, 990}]},
       "0.0002`"],
      Annotation[#, 0.0002, "Tooltip"]& ], {}, {}}}],
  AspectRatio->1,
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-8., 8.}, {-8., 8.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8941236373824673`*^9, 3.894123754086339*^9, 3.8941238953427277`*^9, {
   3.8941239588001337`*^9, 3.894123984965444*^9}, 3.8941241026452103`*^9, {
   3.8941244949629173`*^9, 3.894124523247452*^9}, 3.8941256278156567`*^9, {
   3.8941258211500177`*^9, 3.8941258404690037`*^9}, 3.894125889585691*^9, 
   3.894126285489057*^9, 3.8941263654655533`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"1f9f9076-3abf-41af-9397-0cfde5961cd9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListContourPlot", "[", 
   RowBox[{"Abs", "[", "CorrFT", "]"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.8941262675023327`*^9, 3.8941262984740133`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"9400c130-14a2-4b05-802d-d2181a27ae17"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJx1mXlcjNsfx6dVm7TPtE/TNDPNLkqE+Va6logSbkoo0XKRPV3hdm+lRZJC
1ntTblIXaaGFkC2SvaxFRIVCo8XSr9/LM8/zu1+vnz98Xu855zme85xzvt/P
97AJWu4Tokyj0TYN/vVf/f5HA75rl+y76iE2QsxAbIGYiZiFmI2Yg5iHmI9Y
iFiMWDEfGvx7Pgo2QsxAbIGYiZiFmI2Yg5iHmI9YiFiMWIr4/81T4/+oHmIj
xAzEFoiZiFmI2Yg5iHmI+YiFiMWIpYjxPsXrjOeN1QgxA7EFYiZiFmI2Yg5i
HmI+YiFiMWIpYnwu8b7G64znjZWB2AIxEzELMRsxBzEPMR+xELEYsRQxjkP4
HON9jdcZzxurBWImYhZiNmIOYh5iPmIhYjFiKWIcd3HcwucY72u8znjeWJmI
WYjZiDmIeYj5iIWIxYiliHGewXEaxy18jvG+xuuM542VhZiNmIOYh5iPWIhY
jFiKGOdVnJdwnMZxC59jvK/xOuN5Y2Uj5iDmIeYjFiIWI5Yixj4C52Gcl3Cc
xnELn2O8r/E6sxBj5SDmIeYjFiIWI5Yixr4J+w6ch3FewnEaxy18jvG+ZiHG
88bKQ8xHLEQsRixFjH0i9lnYd+A8jPMSjtM4buFzzEKM1xnPGysfsRCxGLEU
MfbF2Fdin4V9B87DOC/hOI3jFgsx3td4nfG8sQoRixFLEeM6APto7Cuxz8K+
A+dhnJdwnGYhxucY72u8znjeWMWIpYhx3YPrBuyjsa/EPgv7DpyHcV5iIcZx
C59jvK/xOuN5Y5UixnURrhOwb8Y+Evsq7DNw3mUhxnEZxyl8bvE+xutKzbMh
ODd58i0Vgrtksxt7wla9UyWYBlp/m+wv1JaQ7YrnbvO7s2Pm9ckU/f7i9mVc
tVMl+2Wyb22jjVeBmcHaW+gPe8nnFO2PSrUfb5IqxpUCo/Tcnq2fxNCuGWsX
XEO9n3xdbfEEUIP2zoywxM39srynhWpBa3tlvp33lYe7qELa7SMb846rkBqQ
PKv5nqGE1O/jaAAjXQvYYz7KOo85q4tqhpDzazihd1Zrnzb5Xr2bfGU+u3XJ
djbrD+4jnjbJb0WMwo4qQ7K/X+ujP2e+0yf54oGDGRVWP9ZNtmsb02wXfpSV
rJ9aF0g3JMej+XDn9Nnpk1wYbWWfH2ZM8l7vzRdL5pmT49lqnfdJmE75ctc9
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
6dalfFSB3Mfp2H/zOaFdMTk/GaZQ+h/BixVt
   "], {{
     {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkL0yw1EQxe/+PUmqzOAJFAozSYp0CjGDJh/SURGFTqJDoZJUGaROggdA
gbfyO7On2Dln9+7uOXtr3fP9s6qUUic2iHGUMgTvwF/iC35MQws8JDrECfk3
+MH7D/EJP6LWJObwKbU9+DX8Hj6InN+uMlf9AfyL3KN9j65r7hm+hLfhC/ga
/gq+WUuaT5Fa0tS79siraspXxFWk51FkrnfNzzyrHU3fdOB7tOcdPLVneZcP
+XmJ/Bf9zy61vue34DtVaklzE96A9yL71H9r70t7G1qzY18r+1aunS3rqX8N
Xkb23xgb7pv4Rul3I+vS75lfgP8FaTvo
         "]], 
        PolygonBox[{{410, 161, 177, 588}, {603, 193, 194, 456}, {436, 195, 
         178, 422}, {373, 69, 86, 374}, {434, 176, 193, 435}, {604, 194, 195, 
         457}, {390, 103, 87, 569}, {569, 87, 88, 389}, {421, 178, 161, 
         411}, {555, 70, 69, 354}, {375, 88, 71, 358}, {588, 177, 176, 419}, {
         556, 71, 70, 356}, {387, 86, 103, 388}}]}]}, 
     {RGBColor[0.23979931019121842`, 0.3809996167728992, 0.62597078256003], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlstPVlcUxe+5RqzprCpxWCPVGJ2JFWOTNtEm0mibig58xKQWUNRqUp9f
CT7ARxGrgnzGICAK6KxGrZ3KAJvqCF9TYwX/AF9JkzroWt2/mzpY2d895+z3
2htmbd61emeeZdmoMEmoEqYJ04VlwhqhTmgQ9gl7hXrkHuFWyrIRyZuS33O2
W/hMRn+UPKXzGZJThA+Ek/reKdku+VzylfBSuJ6FnTvCUWzYVrUw+724JgsV
wkHhhyxsfSp8IswRjqHn+I4jHffPwn7hgHCCM39/qDinSs5UPO3cl4RG7v1u
Ef7to5I8rLNSugOSPdKdkHwjvLaOvtfat2St5HphnTDOvXP+Q3djkk8lj6bw
15bi3TahSVgi+1udh86vCL+6TpLNKWyWJN8Jb/X7H8kXWfx+g/5P5OIaHaJm
t4UhYZj6+awFn83o+K5bKPtOdjf6HT6383Yj+juyiLFE7dqy6PtuOFRB7zul
f1jy8zy4dkv4DXlFGBT+1JuHkhvy6KH5ZK4dS+HD9ViVR3x9KfQHyacni/6d
FJYLC+FOwdeCvw30tkTcTeSzjj5dTcSWgov/1Rw9z8Ja7NXx3Q6flyque/r9
yLXJo5bbqFdHipp4Ju6St/tQl4e8lsLWMmI3L+x7hD64pp6JxVlwfK7QJRwR
WoVN2P1ddrpSnH+hs4spajucoi4l+lvGnmflPNKz0sF9M3k2kvdpOGKunIVL
7mWj7K6Q3C/5JIu+Oo4b1G4UPvtNLbaLerfAHXOoE3uO+xw5taHnnGuEM/i3
75o8uNEq+xfpeQc9qYc33SnmfHke+rXY8wybl95J/cIv5NebohYr9H5Jihov
lrws9Or3Vzrfkkee95l39/pxFnNn6bsmZn4Le28OPofIzf0cpH/+npdH379L
EZffVsGtBvIZIH/Xfgqx++003no/9qeYgdo89lMl77xzHhKr9+0Dvj0f5pp9
n0+xH7/MQ28ucb9CZ5yzGvpRn2LnLtD7b1OcfyP5cR52v06h77d+1yecotav
sVfsywnq90w6f0n+zZ7roz8+GyPul3w7puvcXyLWGeRcKf2PJKslB1PUznt6
c4o9Pj+PelVTg8nU0ToV79XVM2ouj9KvYleZa+ZcD1wxZ8op+nubd5fg1Bli
dKzOybPYSe9HyGmM2jjfXs6ek+dpbNmG96HntPjbaFnsWstW6tuPrS7itk/z
bIhv82+Yb+dmzj4m1gH8XYBL/ezjcWIq/qY6jsPkchb/3fgpdko5+382Jojv
HHGZd94v5vgRzmxrah59cA8X5jHPe1LMhHm0iLzL+DuEf8fu3dJBf6p46x6X
OPPfhkfE4nwOcFb8X2DpfdFC3V3LfZw554P48Z354zjNk38BIOgghw==
         "]], PolygonBox[CompressedData["
1:eJwlk8tvT1EUhfe+YSBmIiYmxECKWauKeFRVlSA0BiiJlraCSrxaacS7LepN
0UdIvWaEqikD75HnVHTQP8BAIkx8K2vw5bfW75x779lr7zO9Yd+G1iIiqmEc
jGTEa36/wVYWPuK/o9/ANvwofiz8XzN+BVxGX4HbrK3G30HfhXv4Ofhy9DzY
if8Do+hf8Bd9EY6iL8Ay9r7Df0a/gmH0D/gUfuYnehV7BtCD+obOCi/De96i
a1i/ge6FAfwi/AH0fjiPr8Z3o8/CzfQ39e0euIZ/DsPhDJRFX7oW1ahat8CX
8Bl1VtWs2oegH13P+tfwnvf4Bfhd6BY4g6/En0SfgKv4pYX1cWWIX4hvRe+F
7nQP1Au98wN+SeG9x3Qm/CA8CNes2i/h94QzVbbKXNmvhCZ0IyxHl8Es9rel
1zZBO/o+PAn3UL1URsqqD27pW+laldFD7YXH4R48RU+FKegJMFG9SPeiE6rw
j/Aj4TOvKdxD9VLvGNLZ+K8r3KNe/GJ8O7pNM5JGuglOp8+ssytjZX0IvzFc
o2o9ApvRtdqDXgcV6JkwP52BspgLDfgu2B1+pkPZpfeqJtX2LD2bykhZqUfq
Vb0yR5fDDHQpTFOvlXl4BjWLtYWz7FfGrM0u/G3dkR34g1AXfqaCtc707CgD
ZTEZPx49SRnjX6TvpjKtKzwTmg3N0Dn0dqgKv7O0cA/UC2V8nbV/8Dt8p3W3
m9NZKaP16LXpWvSOEp49lc5eGR9G96TvlmZas12WPpsyUBb/AVwJh3k=
         "]]}]}, 
     {RGBColor[0.4027487377883859, 0.4452471602451197, 0.5823138410445272], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkztMVFEQhu+5lPaQCIlghR2Rp9kQFCFEwttQEWF3m11jBBdtDDGojUQo
gAALCQRiASwIarNYWRjZQgs7K6JCYW1ljDR+k/mLP/9358x5zZlbk54YGo+j
KOpDZWgqRNEI/gL/gX7Cf/BT9As+x68w4arNgdfwPVRA9/juxrP4fdQDj+N3
FX+Mv0QT8Dx+Sev0wpNoEK4jVglXwM14AtXCLTaOrsEZ/B/6Df/Fc7Gf7czG
ld+Pr+pcu+gGOTl8jngrnIafBx/LR577lu8P+EedxXJSaAw9iPzcBeXavY/Q
NtpBtazZjieZOxz7WAEeg0vw++Dr2bpDWs/WTdo6wfNtXl7n3dFYTrlWF5v7
kNwn6A48g1cTvww3qa6jWrcl9n0eEX8aPNaoGiR1r73g9xkg3ouKti+xUfgb
/BleCL7/dWKLwedbLWd1H6vlvPZug6eDn6EB7oq9PhvEMnoj66P14HEbz6uH
OuHbqlWR2DH6Cp/gJfEnfAsdwN3kbsL78C24XvVPEbupOi7D7/Smb/Bnwe/e
xPgh/NreAt4P3sOD8Cutb/vsqj/67WzqvQH7J/RffMcvxN6r1rNV6tuL+FLw
M9hZZvReCdXD3rqoN7O3a8CzqvkXuFxv2givqI87iK2qVlaz/9MycpU=
         "]], PolygonBox[CompressedData["
1:eJwtkjlMlkEURedNbKQWbUxEK2hBEAIJxGiCRLYfOyNbA8YouDS4gp1CowGX
RE208AeVqI1aWRil0MLOygixsLYy0Hkud4qb79zvzfKW2T8+VTmXU0odaAfq
w1T5LkuRUhd+Gj6P7uIH8S/gl+gVvge/KkZP8UfwD+D7aBF/Av8Ofi/hj+If
Jq+5h+/ETyXfcQc/gF9J5Q58f3Yu2//wHfgxeBzN449l56L1T/CP0fPkO3uJ
NaMReBjdILYSzqVaal0N5/8RvYE/hfk7+gJ/Qz/gNTSiWsKsf8P4CXwb3INO
wzNhPomuwM3oANyI9rF+oKyvR+3wz/BdG2gd/o3+lPMnWf8vHPuLtsI1qtbt
HsJL4V6rnm7WX9SMknt0CP+h5Kt+aBYL4Vkqrl5+Lver5rfwdXQcPoWuwbfC
vdOMbsM3w72voFb294ZrO6yasu/U2aNojthk6YdqHoIvh3ujf2fgWrQL7WRf
DdoM16qaN+CD2fcrn6v49mzWP+XWmJ2Lar4QXqO4ajgLt2Tnojcwi69kv1XN
XLP/VfqrHqzB1XCv1LMh1YPfU+bVBl8K36d6m4i/Lu9F5z2DR8MxrVFureG9
OmMv/LW8J814gnhf6Z/eSF32DDVLveFHev9lv/o3CI+V87WnofRMvdutPNF/
7LN0uQ==
         "]], 
        PolygonBox[{{282, 23, 523, 280, 281}, {509, 508, 507, 230, 625}, {279,
          278, 308, 34, 534}}]}]}, 
     {RGBColor[0.5739769037916466, 0.5054231930258183, 0.4816557498477222], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkcsvQ1EQh8+5rIqERb3ika6wQDxaUiKxpu1Vgtq0saoIRXeNBP+NZ2Kn
WhIhYkFsRUKasLC0kDSxkPgmZxaT3zdz75lz5jeh1Vxy0zPGRIgaop6kDu20
xmwRCXiAWg6Ow/3wLhyDR+EG6841ogHyWjgIN2k/yQ/Ji2ic761owLg7Lqg/
oAvUT+AS7MP38DN8ix4Tl3CCeod158fRZs/d0QLvENPwMLUKXIHf0Cz5F/wB
p+EX+BE+I67hJLU7vesVnSL64Cg6xjcfzsNt1r253boZZJYjOEVMwivohnoi
3qwTM3AB3bauzyDnTuEyPAfvqZ9heBGOynvQd33/D3pDXEl//sl4zquSzKtz
fcp39S1F7Rf+hqtoF/kQPAvPa/8suqY+PMFBOASPWLcD6V+E93XvEWq92idm
nb/icwaeUK98tFv7hGVeuAr/yd5070vUztVz8f5APRGPy7rfZbhH+6ep/QPI
rkfe
         "]], PolygonBox[CompressedData["
1:eJwtks0rhFEUxu+9rIaFST6SaGxQPhIjDSlrxoxRGBuT1fiawT+A/0aULIeZ
sSBZkK0UTbGwtFBjJ7/TOYtf7/N07rnn476xzWKmEJxzQ9AII5gU30UoeufS
MIhOwDI6CWPoGPRytgMftdwIfjhobhJ2ieW95s7DDroLIuhO6Jb7OX+NvoIz
fAZfRVfgAp8KGivBKX4Un3ba4z5+CV92esc5vgAzVn8PPeW1lswwje4z3wTN
5LbgG5zO0Ir+hC/0C2wRH/c6q8zcE3QmuVtqZNGv8IyuwTv6yWvuA+Q4n7D9
SU2pnbV5pecq/sPq1eGA2HrQ2WUHN8TWbH7JqeDr8G31auiS11pSc4Ozq0F3
JTllr3fIXdLjHToHczbPAGcfrV/pIY/f9vpW8mYrXncStfduIz5p/4e8wQmx
iaD7kDc/wi/Y/yE1+oll7P1lB7PouO1T7mwn/uZ1FunvHn1r+5SeL9F/Xncj
/R1yPm7/l/RwTOzH8mUnv+h/+95Rsg==
         "]], 
        PolygonBox[{{598, 597, 425, 184, 441}, {351, 65, 370, 560, 561}, {442,
          199, 439, 597, 598}, {561, 560, 371, 80, 369}}]}]}, 
     {RGBColor[0.745205069794908, 0.5655992258065172, 0.3809976586509167], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkL1LQlEYxs+9Di4NV6RBkPBKkQiW4daH2myTg6ZEhrh0ia7ZX9eXDS5Z
aUuDCrWE4FRDg1v0eznv8PD8eM7hPc95/XZYvXSNMRkUQQ3HmAP8Ar9CZXiH
Cz20hP/IQlSEt8hq8B4c4CM0hNvkaTgB7+Jv6BnuyAz4G/7Fu6gEb5OfowX8
5di3pUOObAZ/wj/4o7wBv+MBZxN4DJ9onzTZKvLguGN7S/8WHNU8BsfhlPwL
rsFP8C28pnkB3tD+Kfxe+x9zfqbvvpKtuPaO/PUBvcj+yG4cO1Nm3+lO6nBf
+zdd20/6ePghysL7+If+d4pvci8PH8F13YlPVtT7VXygM2X2qe5znTvXus85
WVLnVOB/Jzo2rA==
         "]], PolygonBox[CompressedData["
1:eJwtkEsrxGEUxt/z5gPQNAsloTFKuWXnMsaa1SRDyWWyYWFcPt1gZ+M2lCxQ
bKSsWIyy5Pd0zuLX/zn/57znNtho1g5ySmkAumDLUqrynYQRjBrxKHoWVtGn
cIl+gm38nezxFbTxOvCFfoNX9J15rnKUW4IFdAU28MrZ++nfJvGyeW/N04+3
C9foG3jA+zavrR4/6Nuo/wl75K5FvuY5w1sxn107LKLfzXN/4Zjc9ey19eYc
r579reZtEfdAd8xTwHuO/m24QE+be8op4s/FvXphGD0Vvnbqw380f6saL+hG
9FP/e+Kl2F830W2Gst9qHup4M+a11aOC/jPfRTudkDse+brnId5E3Fv1jog/
Yn/dbB9vLHttvWni/QPIxEAS
         "]], 
        PolygonBox[{{288, 25, 524, 285, 286}, {270, 269, 272, 16, 519}, {449, 
         448, 602, 205, 447}, {545, 61, 345, 346, 347}}]}]}, 
     {RGBColor[0.9026251175396437, 0.6265627938491092, 0.29813786437289536`], 
      EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{325, 44, 326}, {447, 204, 449}, {609, 217, 462}, {550, 
         47, 331}, {620, 217, 465}, {347, 44, 545}, {484, 217, 620}, {471, 
         204, 614}, {538, 47, 330}, {350, 47, 550}, {329, 47, 538}, {461, 217,
          609}}], PolygonBox[CompressedData["
1:eJwt0DsPAUEUhuHZjYSKuETltlg9NQU/QQgFzaIhoeB/Epdm1bQU1LxfZoon
OTm7M985E0S74dY3xhSRQMYzJo0kzRRu1FfEuKOHLkK0UOCfPNrUHZxwxJLe
yt2hu7L0chig7+7QXQFqqKCKJx5Yc2aDN/ULH3zRoFfHhHqKBXXk20xlK1PZ
Z+oLxhi5TGWHfGtiRj13O4RuhsDtGLtMZR/4d+/bmZ5uR+1aolf27U7aTW+g
tzD4efaMzipDWZpZs/8BCH4kKA==
         "]], 
        PolygonBox[{{614, 204, 447, 468, 469}, {541, 540, 331, 47, 329}, {619,
          618, 462, 217, 484}, {465, 217, 461, 610, 611}, {344, 343, 545, 44, 
         325}, {330, 47, 350, 548, 549}}]}]}, 
     {RGBColor[0.9299778597126886, 0.6949446492817215, 0.3829313651093347], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtz00LAWEQwPFnHyVFbaRIpM1LSSR3F1I4KuXiQlwUF74niQO5yUtRLsrR
f+wcpvk1Mzs7jzde9hfWGJMmAkTXMSZLzlDs4CpO4oL13aPWIio4QW2Dj3iC
9/iMZ/iCH3hu/Z7MbKmNdKfsu+m3csAHv/Bb/k9EsEc+6M6n4++SnVdcJFK4
QY5Td3EMD/W2HLUV8cWGHNSZMP22zsisvFPeW8dr3X/HTaKMB+SoztTwSe+R
t4bsf7VxcUnvyZN3MoenNH9W3iQ/
         "]], 
        PolygonBox[{{292, 26, 12, 291}, {306, 31, 15, 532}, {536, 46, 45, 
         323}, {319, 43, 26, 297}, {613, 219, 218, 464}, {267, 15, 31, 529}, {
         547, 45, 46, 349}, {289, 12, 26, 294}, {486, 233, 248, 628}, {492, 
         221, 237, 497}, {496, 237, 221, 475}, {317, 26, 43, 322}, {514, 248, 
         233, 629}, {266, 2, 15, 518}, {274, 15, 2, 520}, {622, 218, 219, 
         489}}], PolygonBox[{{535, 45, 325, 326, 327}, {304, 31, 329, 538, 
         539}, {539, 538, 330, 46, 328}, {488, 233, 484, 620, 621}, {472, 471,
          614, 221, 470}, {621, 620, 465, 218, 487}}]}]}, 
     {RGBColor[0.9573306018857334, 0.7633265047143334, 0.46772486584577333`], 
      EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{631, 1, 264}, {525, 13, 295}, {302, 30, 527}, {513, 234, 
         638}, {299, 28, 300}, {291, 13, 292}, {327, 28, 535}, {539, 30, 
         304}, {635, 220, 624}, {621, 234, 488}, {638, 234, 491}, {328, 30, 
         539}, {487, 234, 621}, {527, 30, 303}, {470, 220, 472}, {518, 1, 
         266}}], PolygonBox[{{537, 536, 323, 324}, {320, 319, 297, 298}, {268,
          267, 529, 530}, {623, 622, 489, 490}, {515, 514, 629, 630}, {493, 
         492, 497, 498}}], 
        PolygonBox[{{298, 297, 292, 13, 525}, {530, 529, 304, 30, 302}, {624, 
         220, 470, 492, 493}, {303, 30, 328, 536, 537}, {264, 1, 518, 267, 
         268}, {324, 323, 535, 28, 299}, {491, 234, 487, 622, 623}, {630, 629,
          488, 234, 513}}]}]}, 
     {RGBColor[0.9846833440587783, 0.8317083601469457, 0.5525183665822126], 
      EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{268, 14, 264}, {324, 29, 537}, {525, 27, 298}, {634, 29, 
         526}, {630, 249, 515}, {623, 235, 491}, {513, 249, 630}, {493, 236, 
         624}, {302, 14, 530}, {530, 14, 268}, {490, 235, 623}, {517, 14, 
         265}, {299, 29, 324}, {298, 27, 320}, {498, 236, 493}, {537, 29, 
         303}}], PolygonBox[{{636, 635, 624, 236, 494}, {639, 638, 491, 235, 
         516}, {265, 14, 302, 527, 528}, {633, 27, 525, 295, 296}, {526, 29, 
         299, 300, 301}, {637, 249, 513, 638, 639}, {632, 631, 264, 14, 
         517}, {528, 527, 303, 29, 634}}]}]}, 
     {RGBColor[1., 0.95, 0.75], EdgeForm[None], 
      GraphicsGroupBox[
       PolygonBox[{{639, 263, 259, 637}, {494, 256, 257, 636}, {265, 251, 260,
         517}, {296, 252, 253, 633}, {526, 261, 254, 634}, {301, 255, 261, 
        526}, {516, 258, 263, 639}, {634, 254, 262, 528}, {528, 262, 251, 
        265}, {517, 260, 250, 632}}]]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[{636, 494}], 
        LineBox[{516, 639, 637}], 
        LineBox[{632, 517, 265, 528, 634, 526, 301}], LineBox[{633, 296}]},
       "0.0775`"],
      Annotation[#, 0.0775, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{295, 525, 298, 320}], 
        LineBox[{300, 299, 324, 537, 303, 527, 302, 530, 268, 264, 631}], 
        LineBox[{515, 630, 513, 638, 491, 623, 490}], 
        LineBox[{498, 493, 624, 635}]},
       "0.075`"],
      Annotation[#, 0.075, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{266, 518, 267, 529, 304, 539, 328, 536, 323, 535, 327}], 
        LineBox[{291, 292, 297, 319}], LineBox[{472, 470, 492, 497}], 
        LineBox[{489, 622, 487, 621, 488, 629, 514}]},
       "0.0725`"],
      Annotation[#, 0.0725, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{271, 520, 274, 532, 306, 541, 329, 538, 330, 549, 349, 547, 
         344, 325, 326}], LineBox[{341, 322, 317, 294, 289, 287}], 
        LineBox[{512, 628, 486, 619, 484, 620, 465, 611, 464, 613, 467}], 
        LineBox[{471, 614, 469, 475, 496, 501}]},
       "0.07`"],
      Annotation[#, 0.07, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{449, 447, 468, 474, 495, 500}], 
        LineBox[{466, 612, 463, 610, 461, 609, 462, 618, 485, 627, 511}], 
        LineBox[{270, 519, 273, 531, 305, 540, 331, 550, 350, 548, 348, 546, 
         343, 545, 347}], LineBox[{286, 288, 293, 316, 321, 340}]},
       "0.0675`"],
      Annotation[#, 0.0675, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{285, 524, 290, 314, 318, 338, 342, 362}], 
        LineBox[{346, 345, 364, 557, 367, 558, 368, 559, 369, 561, 351, 551, 
         332, 542, 307, 533, 275, 272, 269}], 
        LineBox[{445, 601, 444, 600, 443, 599, 441, 598, 442, 608, 460, 617, 
         483, 626, 510}], LineBox[{503, 499, 477, 473, 451, 446, 602, 448}]},
       "0.065`"],
      Annotation[#, 0.065, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{277, 522, 279, 534, 309, 543, 333, 552, 352, 562, 370, 560, 
         371, 567, 385, 566, 384, 565, 383, 564, 380, 365, 366}], 
        LineBox[{378, 363, 360, 339, 336, 315, 312, 284, 282, 281}], 
        LineBox[{428, 593, 427, 592, 426, 591, 424, 590, 425, 597, 439, 596, 
         440, 607, 459, 616, 482, 625, 509}], 
        LineBox[{430, 594, 429, 432, 450, 453, 476, 479, 502, 505}]},
       "0.0625`"],
      Annotation[#, 0.0625, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{280, 523, 283, 311, 313, 335, 337, 359, 361, 377, 379, 391}],
         LineBox[{382, 381, 392, 571, 393, 394, 400, 575, 401, 576, 402, 577, 
         396, 572, 395, 573, 386, 568, 372, 563, 353, 553, 334, 544, 310, 308,
          278, 521, 276}], 
        LineBox[{415, 585, 414, 408, 407, 581, 406, 580, 404, 579, 405, 584, 
         412, 583, 413, 589, 423, 595, 438, 606, 458, 615, 481, 507, 508}], 
        LineBox[{417, 586, 416, 418, 431, 433, 452, 454, 478, 480, 504, 506}]},
       "0.06`"],
      Annotation[#, 0.06, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{399, 398, 578, 403}], 
        LineBox[{554, 355, 373, 374, 387, 388, 397, 574, 390, 569, 389, 570, 
         376, 375, 358, 357, 556, 356, 555, 354, 554}], 
        LineBox[{582, 410, 588, 419, 587, 420, 434, 435, 455, 603, 456, 604, 
         457, 605, 437, 436, 422, 421, 411, 409, 582}]},
       "0.0575`"],
      Annotation[#, 0.0575, "Tooltip"]& ], {}, {}}}],
  AspectRatio->1,
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{1., 16.}, {1., 16.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.894126273078155*^9, 3.894126299270053*^9}, 
   3.894126365521041*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"896a3a0a-9524-40fc-9c17-6acdc2016630"]
}, Open  ]]
},
WindowSize->{1440, 847},
WindowMargins->{{127, Automatic}, {Automatic, 45}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
FrontEndVersion->"13.2 for Mac OS X x86 (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"669ac3d7-5958-470d-a4cb-85bf48905995"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 668, 11, 48, "Input",ExpressionUUID->"553d1835-998f-4fb8-ae6e-03b7a6b4d032"],
Cell[1251, 35, 1962, 29, 54, "Output",ExpressionUUID->"009010f6-2a4b-44e6-828c-55303b2f4a18"]
}, Open  ]],
Cell[3228, 67, 213, 3, 46, "Input",ExpressionUUID->"10b3ac31-bbfd-478d-ad35-4b27ac2936df"],
Cell[3444, 72, 1139, 19, 46, "Input",ExpressionUUID->"d2f2cbc8-9113-49dc-99cd-956526c7f59c"],
Cell[CellGroupData[{
Cell[4608, 95, 692, 13, 46, "Input",ExpressionUUID->"190b20a9-9592-4307-85f0-83b87cf15239"],
Cell[5303, 110, 3049, 76, 173, "Output",ExpressionUUID->"65c55c42-b06b-448e-8a61-f5ea6139031c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8389, 191, 1089, 23, 46, "Input",ExpressionUUID->"65a9572d-5c58-45bb-9c97-3148279ebdf4"],
Cell[9481, 216, 9132, 164, 983, "Output",ExpressionUUID->"c405eb7d-0a50-4e25-bfc1-c6748628ad68"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18650, 385, 164, 3, 46, "Input",ExpressionUUID->"3c02b818-1c6b-406e-8a8d-f05e6ac0da14"],
Cell[18817, 390, 6247, 113, 565, "Output",ExpressionUUID->"6647c38f-0a75-4d77-94d4-6315f748a14e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25101, 508, 326, 5, 46, "Input",ExpressionUUID->"004795d7-ea2f-4df9-9ec1-3241fde93134"],
Cell[25430, 515, 11485, 245, 1014, "Output",ExpressionUUID->"9d2d3521-29e9-4b46-aab7-2ae544901fbf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36952, 765, 266, 4, 46, "Input",ExpressionUUID->"1f173096-a777-4a85-b889-60c0beb1f9a7"],
Cell[37221, 771, 32578, 582, 565, "Output",ExpressionUUID->"1f9f9076-3abf-41af-9397-0cfde5961cd9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69836, 1358, 271, 5, 46, "Input",ExpressionUUID->"9400c130-14a2-4b05-802d-d2181a27ae17"],
Cell[70110, 1365, 22497, 408, 583, "Output",ExpressionUUID->"896a3a0a-9524-40fc-9c17-6acdc2016630"]
}, Open  ]]
}
]
*)

